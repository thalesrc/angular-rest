var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ClientConstructor.html",[0,0.079,1,0.738]],["body/interfaces/ClientConstructor.html",[0,0.126,1,0.877,2,0.804,3,0.616,4,0.535,5,0.535,6,0.616,7,1.334,8,1.004,9,0.393,10,1.303,11,1.275,12,3.34,13,0.612,14,0.052,15,0.762,16,0.968,17,0.616,18,1.484,19,0.877,20,1.145,21,1.484,22,0.535,23,1.265,24,1.589,25,2.349,26,2.062,27,0.915,28,0.877,29,0.915,30,0.657,31,0.915,32,0.765,33,0.915,34,0.877,35,0.915,36,0.877,37,0.915,38,0.546,39,0.915,40,0.877,41,0.915,42,0.616,43,0.915,44,0.877,45,0.915,46,0.657,47,0.915,48,0.877,49,0.915,50,0.877,51,0.915,52,0.877,53,0.915,54,1.145,55,0.915,56,1.042,57,0.705,58,0.877,59,1.004,60,1.004,61,1.004,62,1.004,63,0.877,64,1.004,65,1.334,66,1.484,67,1.042,68,1.145,69,1.042,70,1.042,71,1.042,72,1.749,73,0.616,74,1.177,75,0.888,76,1.303,77,0.877,78,1.818,79,1.518,80,0.804,81,1.042,82,0.915,83,0.834,84,1.022,85,1.334,86,0.762,87,0.657,88,1.473,89,1.19,90,1.518,91,1.484,92,0.329,93,0.657,94,1.042,95,0.915,96,0.535,97,1.114,98,0.705,99,0.616,100,1.145,101,0.705,102,0.705,103,0.535,104,0.915,105,0.915,106,0.393,107,0.021,108,0.031,109,0.021]],["title/interfaces/ClientInstance.html",[0,0.079,99,0.738]],["body/interfaces/ClientInstance.html",[0,0.125,1,0.608,2,0.794,3,0.608,4,0.529,5,0.529,6,0.608,7,1.135,8,0.696,9,0.388,10,1.292,11,0.696,13,0.611,14,0.052,15,0.756,16,1.135,17,0.608,18,1.874,19,0.87,20,1.135,21,1.472,22,0.529,23,1.263,24,1.586,25,2.345,26,2.058,27,0.904,28,1.172,29,0.904,30,0.877,31,0.904,32,0.76,33,0.904,34,0.87,35,0.904,36,0.87,37,0.904,38,0.542,39,0.904,40,0.87,41,0.904,42,0.608,43,0.904,44,0.87,45,0.904,46,0.651,47,0.904,48,0.87,49,0.904,50,0.87,51,0.904,52,0.87,53,0.904,54,1.135,55,0.904,56,1.029,57,0.696,58,0.87,59,0.995,60,0.995,61,0.995,62,0.995,63,0.87,64,0.995,65,1.325,66,1.472,67,1.029,68,1.135,69,1.029,70,1.029,71,1.029,72,1.741,73,0.608,74,1.172,75,0.882,76,1.292,77,0.87,78,1.811,79,1.508,80,0.794,81,1.029,82,0.904,83,0.829,84,1.015,85,1.325,86,0.756,87,0.651,88,1.469,89,1.204,90,1.508,91,1.472,92,0.325,93,0.651,94,1.029,95,0.904,96,0.529,97,1.108,98,0.696,99,0.87,100,1.135,101,0.696,102,0.696,103,0.529,104,0.904,105,0.904,106,0.388,107,0.021,108,0.03,109,0.021]],["title/interfaces/ClientOptions.html",[0,0.079,101,0.845]],["body/interfaces/ClientOptions.html",[0,0.123,1,0.582,2,0.76,3,0.582,4,0.506,5,0.506,6,0.582,7,1.1,8,0.666,9,0.371,10,1.252,11,0.666,13,0.62,14,0.052,15,0.732,16,0.943,17,0.582,18,1.426,19,0.843,20,1.1,21,1.426,22,0.506,23,1.259,24,1.575,25,2.329,26,2.045,27,0.865,28,0.843,29,0.865,30,0.631,31,0.865,32,0.899,33,0.865,34,0.843,35,0.865,36,0.843,37,0.865,38,0.642,39,0.865,40,0.843,41,0.865,42,0.582,43,0.865,44,0.843,45,0.865,46,0.631,47,0.865,48,0.843,49,0.865,50,0.843,51,0.865,52,0.843,53,0.865,54,1.1,55,0.865,56,0.985,57,0.666,58,0.843,59,0.965,60,0.965,61,0.965,62,0.965,63,0.843,64,0.965,65,1.293,66,1.426,67,0.985,68,1.1,69,0.985,70,0.985,71,0.985,72,1.711,73,0.582,74,1.239,75,0.861,76,1.252,77,1.086,78,1.784,79,1.471,80,0.76,81,0.985,82,0.865,83,0.899,84,0.991,85,1.293,86,0.732,87,0.631,88,1.451,89,1.196,90,1.471,91,1.426,92,0.311,93,0.631,94,0.985,95,0.865,96,0.506,97,1.201,98,0.666,99,0.582,100,1.1,101,0.965,102,1.242,103,0.943,104,1.613,105,1.471,106,0.692,107,0.02,108,0.029,109,0.02,110,2.597]],["title/classes/GuardForbid.html",[92,0.394,111,1.64]],["body/classes/GuardForbid.html",[0,0.048,1,0.843,3,0.445,4,0.732,5,0.386,7,0.899,8,0.509,9,0.439,10,1.023,11,0.788,13,0.369,14,0.052,15,0.824,16,0.386,19,1.201,20,0.899,22,0.386,23,0.386,24,1.556,28,0.445,30,0.333,32,0.333,34,0.445,36,0.445,38,0.45,40,0.445,42,0.445,44,0.445,46,0.949,48,0.689,50,0.445,52,0.445,57,0.964,68,0.899,73,1.227,74,0.689,75,0.732,77,0.689,80,1.1,83,0.768,84,0.949,85,0.58,86,0.824,87,0.515,88,0.788,89,1.066,92,0.238,93,0.631,96,0.598,97,0.843,98,0.509,99,0.949,100,0.58,103,0.598,106,0.654,107,0.038,108,0.024,109,0.015,110,0.86,111,1.53,112,1.15,113,1.629,114,0.86,115,3.476,116,1.629,117,1.693,118,1.331,119,1.693,120,1.15,121,1.331,122,1.693,123,0.988,124,2.587,125,2.114,126,1.15,127,0.752,128,0.661,129,0.661,130,0.988,131,1.873,132,2.178,133,1.366,134,2.587,135,2.453,136,1.366,137,2.484,138,1.366,139,1.15,140,2.453,141,2.414,142,2.927,143,1.366,144,1.78,145,1.366,146,2.178,147,1.366,148,2.927,149,3.592,150,2.178,151,2.261,152,2.114,153,1.366,154,1.15,155,3.592,156,1.366,157,1.15,158,1.366,159,2.453,160,2.261,161,2.114,162,1.78,163,2.114,164,2.806,165,2.114,166,1.366,167,2.114,168,1.366,169,0.86,170,2.727,171,2.114,172,2.114,173,2.114,174,1.366,175,1.366,176,1.366,177,1.15,178,1.78,179,1.366,180,2.114,181,1.366,182,1.366,183,1.15,184,1.366,185,1.366,186,2.114,187,2.114,188,1.366,189,1.366,190,1.366,191,1.15,192,1.366,193,1.366,194,2.114,195,1.15,196,2.913,197,2.178,198,3.151,199,1.366,200,2.114,201,1.366,202,3.476,203,1.366,204,2.114,205,1.366,206,2.114,207,1.366,208,1.53,209,1.366,210,2.109,211,1.873,212,2.114,213,2.114,214,2.114,215,1.53,216,1.366,217,1.366,218,1.366,219,1.366,220,1.366,221,2.178,222,1.366,223,2.587,224,2.114,225,0.86,226,0.988,227,1.78,228,1.366,229,1.366,230,1.366,231,1.366,232,1.366,233,1.366,234,1.366,235,1.366,236,1.366,237,1.366,238,1.366,239,1.366,240,2.114,241,1.366,242,1.366,243,1.366,244,1.366,245,2.114,246,1.15,247,1.366,248,1.366,249,1.366,250,1.366,251,1.366,252,1.366]],["title/interfaces/Handler.html",[0,0.079,86,0.641]],["body/interfaces/Handler.html",[0,0.126,1,0.619,2,0.808,3,0.619,4,0.538,5,0.538,6,0.619,7,1.149,8,0.708,9,0.394,10,1.308,11,0.708,13,0.605,14,0.052,15,0.765,16,0.97,17,0.619,18,1.49,19,0.88,20,1.149,21,1.49,22,0.538,23,1.265,24,1.59,25,2.351,26,2.064,27,0.919,28,0.88,29,0.919,30,0.659,31,0.919,32,0.767,33,0.919,34,0.88,35,0.919,36,0.88,37,0.919,38,0.548,39,0.919,40,0.88,41,0.919,42,0.619,43,0.919,44,0.88,45,0.919,46,0.659,47,0.919,48,0.88,49,0.919,50,0.88,51,0.919,52,0.88,53,0.919,54,1.149,55,0.919,56,1.047,57,0.708,58,0.88,59,1.008,60,1.008,61,1.008,62,1.008,63,0.88,64,1.008,65,1.337,66,1.49,67,1.047,68,1.149,69,1.047,70,1.047,71,1.047,72,1.752,73,0.619,74,1.18,75,0.89,76,1.308,77,0.88,78,1.821,79,1.752,80,0.808,81,1.047,82,0.919,83,0.836,84,1.025,85,1.337,86,0.89,87,0.659,88,1.475,89,1.191,90,1.522,91,1.49,92,0.331,93,0.659,94,1.047,95,0.919,96,0.538,97,1.116,98,1.278,99,0.619,100,1.149,101,0.708,102,0.708,103,0.538,104,0.919,105,0.919,106,0.394,107,0.022,108,0.031,109,0.022]],["title/classes/HeadersInjector.html",[92,0.394,93,0.552]],["body/classes/HeadersInjector.html",[0,0.126,1,0.617,3,0.617,4,0.536,5,0.536,6,0.617,7,1.146,8,0.706,9,0.393,11,0.706,13,0.6,14,0.052,15,0.763,16,0.968,17,0.617,18,1.486,19,0.878,20,1.146,21,1.486,22,0.536,23,1.265,24,1.589,25,2.349,26,2.063,27,0.916,28,0.878,29,0.916,30,0.657,31,0.916,32,0.765,33,0.916,34,0.878,35,0.916,36,0.878,37,0.916,38,0.546,39,0.916,40,0.878,41,0.916,42,0.617,43,0.916,44,0.878,45,0.916,46,0.657,47,0.916,48,0.878,49,0.916,50,0.878,51,0.916,52,0.878,53,0.916,54,1.146,55,0.916,56,1.043,57,0.706,58,0.878,59,1.005,60,1.005,61,1.005,62,1.005,63,0.878,64,1.005,65,1.334,66,1.486,67,1.043,68,1.146,69,1.043,70,1.043,71,1.043,72,1.75,73,0.617,74,1.178,75,0.888,76,1.304,77,0.878,78,1.819,79,1.519,80,0.805,81,1.043,82,0.916,83,0.834,84,1.023,85,1.334,86,0.763,87,0.657,88,1.474,89,1.19,90,1.655,91,1.886,92,0.329,93,0.765,94,1.886,95,0.916,96,0.536,97,1.114,98,0.706,99,0.617,100,1.146,101,0.706,102,0.706,103,0.536,104,0.916,105,0.916,106,0.393,107,0.021,108,0.031,109,0.021,112,1.594,118,1.192,253,2.27,254,2.348,255,1.594]],["title/interfaces/HeadersObject.html",[0,0.079,87,0.552]],["body/interfaces/HeadersObject.html",[0,0.126,1,0.62,2,0.809,3,0.62,4,0.539,5,0.539,6,0.62,7,1.151,8,0.71,11,0.71,13,0.601,14,0.052,15,0.766,16,0.971,17,0.62,18,1.492,19,0.882,20,1.151,21,1.492,22,0.539,23,1.265,24,1.591,25,2.351,26,2.064,27,0.922,28,0.882,29,0.922,30,0.66,31,0.922,32,0.768,33,0.922,34,0.882,35,0.922,36,0.882,37,0.922,38,0.548,39,0.922,40,0.882,41,0.922,42,0.62,43,0.922,44,0.882,45,0.922,46,0.66,47,0.922,48,0.882,49,0.922,50,0.882,51,0.922,52,0.882,53,0.922,54,1.151,55,0.922,56,1.05,57,0.71,58,0.882,59,1.009,60,1.009,61,1.009,62,1.009,63,0.882,64,1.009,65,1.339,66,1.492,67,1.05,68,1.151,69,1.05,70,1.05,71,1.05,72,1.754,73,0.62,74,1.181,75,0.891,76,1.31,77,0.882,78,1.822,79,1.524,80,0.809,81,1.05,82,0.922,83,0.836,84,1.026,85,1.339,86,0.766,87,0.768,88,1.502,89,1.207,90,1.524,91,1.492,92,0.331,93,0.66,94,1.05,95,0.922,96,0.539,97,1.118,98,0.71,99,0.62,100,1.151,101,0.71,102,0.71,103,0.539,104,0.922,105,0.922,106,0.395,107,0.022,108,0.031,109,0.022,118,1.199,256,2.362,257,2.362]],["title/interfaces/RequestConfig.html",[0,0.079,210,1.64]],["body/interfaces/RequestConfig.html",[0,0.048,1,0.848,2,0.586,3,0.449,4,0.737,5,0.39,7,0.586,8,0.514,9,0.442,10,1.031,11,0.514,13,0.371,14,0.052,15,0.829,16,0.39,19,1.09,20,0.905,22,0.39,23,0.39,24,1.558,28,0.449,30,0.336,32,0.336,34,0.449,36,0.449,38,0.453,40,0.449,42,0.449,44,0.449,46,0.984,48,0.694,50,0.449,52,0.449,57,0.97,68,0.905,73,1.136,74,0.954,75,0.737,77,0.694,80,1.106,83,0.772,84,0.954,85,0.586,86,0.829,87,0.519,88,0.794,89,1.069,92,0.24,93,0.635,96,0.603,97,0.848,98,0.514,99,0.954,100,0.586,103,0.603,106,0.748,107,0.038,108,0.024,109,0.016,111,0.998,113,0.868,114,0.868,115,3.346,116,0.868,121,0.868,123,0.998,124,3.166,125,2.13,126,1.161,127,0.76,128,0.667,129,0.667,130,0.998,131,1.884,132,2.192,133,1.379,134,2.603,135,2.465,136,1.379,137,2.489,138,1.379,139,1.161,140,2.465,141,2.42,142,2.937,143,1.379,144,1.794,145,1.379,146,2.192,147,1.379,148,2.937,149,3.603,150,2.192,151,2.268,152,2.13,153,1.379,154,1.161,155,3.603,156,1.379,157,1.161,158,1.379,159,2.465,160,2.268,161,2.13,162,1.794,163,2.13,164,2.817,165,2.13,166,1.379,167,2.13,168,1.379,169,0.868,170,2.734,171,2.13,172,2.13,173,2.13,174,1.379,175,1.379,176,1.379,177,1.161,178,1.794,179,1.379,180,2.13,181,1.379,182,1.379,183,1.161,184,1.379,185,1.379,186,2.13,187,2.13,188,1.379,189,1.379,190,1.379,191,1.161,192,1.379,193,1.379,194,2.13,195,1.161,196,2.928,197,2.192,198,3.166,199,1.379,200,2.13,201,1.379,202,3.488,203,1.379,204,2.13,205,1.379,206,2.13,207,1.379,208,1.542,209,1.379,210,2.291,211,1.884,212,2.13,213,2.13,214,2.13,215,1.542,216,1.379,217,1.379,218,1.379,219,1.379,220,1.379,221,2.192,222,1.379,223,2.603,224,2.13,225,0.868,226,0.998,227,1.794,228,1.379,229,1.379,230,1.379,231,1.379,232,1.379,233,1.379,234,1.379,235,1.379,236,1.379,237,1.379,238,1.379,239,1.379,240,2.13,241,1.379,242,1.379,243,1.379,244,1.379,245,2.13,246,1.161,247,1.379,248,1.379,249,1.379,250,1.379,251,1.379,252,1.379]],["title/modules/RestModule.html",[258,1.908,259,1.427]],["body/modules/RestModule.html",[0,0.092,3,0.856,4,0.744,5,0.744,13,0.375,14,0.052,15,1.108,17,0.856,22,0.744,23,0.744,30,0.906,38,0.647,74,0.856,83,0.821,89,0.744,92,0.458,93,0.641,96,0.953,102,1.385,103,1.051,106,0.771,107,0.03,108,0.038,109,0.03,110,1.655,116,1.655,118,1.655,120,2.214,121,1.655,123,1.903,127,2.047,128,1.797,129,1.797,130,1.903,141,1.655,225,1.655,253,2.214,255,2.214,259,2.339,260,2.214,261,2.214,262,2.835,263,3.367,264,3.26,265,2.836,266,3.26,267,2.214,268,3.715,269,3.128,270,2.214,271,3.715,272,2.214,273,2.437,274,3.591,275,3.591,276,3.298,277,3.488,278,2.214]],["title/interfaces/RootConfiguration.html",[0,0.079,265,1.64]],["body/interfaces/RootConfiguration.html",[0,0.089,2,1.081,3,0.828,4,0.72,5,0.72,9,0.528,10,1.594,13,0.552,14,0.052,15,1.095,17,0.828,22,0.72,23,0.72,30,0.891,38,0.715,74,1.191,83,0.943,89,1.035,92,0.443,93,0.62,96,1.095,102,1.531,103,1.162,106,0.853,107,0.029,108,0.037,109,0.029,110,2.667,116,1.601,123,1.841,127,2.015,128,1.769,129,1.769,130,1.841,141,1.601,259,2.075,261,2.141,262,2.141,263,2.543,265,2.647,268,3.296,269,3.079,270,2.141,271,3.657,272,2.141,273,2.386,274,3.567,275,3.567,276,3.257,277,3.457,278,2.141]],["title/coverage.html",[279,3.054]],["body/coverage.html",[0,0.137,1,0.662,5,0.575,6,1.436,13,0.29,14,0.052,16,0.575,28,0.662,30,0.691,32,0.691,34,0.662,36,0.662,38,0.493,40,0.662,42,0.662,44,0.662,46,0.691,48,0.662,50,0.662,52,0.662,54,0.864,58,0.662,59,0.757,60,0.757,61,0.757,62,0.757,63,0.662,64,0.757,84,0.662,86,0.575,87,0.495,92,0.493,93,0.495,99,0.662,101,0.757,106,0.422,107,0.023,108,0.032,109,0.023,111,1.471,113,2.534,114,2.534,127,1.12,128,0.983,129,0.983,137,2.712,151,1.279,160,1.279,169,1.784,208,1.471,210,1.471,211,2.362,226,1.471,261,1.711,265,1.471,279,2.032,280,2.032,281,2.52,282,2.52,283,2.032,284,5.661,285,5.635,286,2.032,287,2.032,288,2.032,289,2.032,290,2.032,291,2.032,292,2.032,293,2.032,294,2.032,295,2.032,296,1.711,297,3.515,298,2.032,299,4.026,300,5.538,301,2.52,302,3.531,303,4.047,304,2.52,305,2.52,306,2.032,307,2.032,308,2.52,309,2.52]],["title/dependencies.html",[310,1.912,311,1.965]],["body/dependencies.html",[14,0.051,17,1.055,107,0.037,108,0.043,109,0.037,126,2.728,311,2.345,312,4.018,313,5.5,314,4.018,315,4.018,316,4.018,317,4.749,318,4.749,319,4.018,320,4.018,321,4.018,322,4.018,323,4.018,324,4.018,325,4.018,326,4.018,327,4.018,328,4.018,329,4.018]],["title/miscellaneous/enumerations.html",[330,0.813,331,2.715]],["body/miscellaneous/enumerations.html",[6,1.066,9,0.68,14,0.051,57,1.436,58,1.255,59,1.436,60,1.436,61,1.436,62,1.436,63,1.255,64,1.436,107,0.037,108,0.044,109,0.037,267,3.741,330,1.391,331,3.274,332,2.757]],["title/miscellaneous/functions.html",[330,0.813,333,2.286]],["body/miscellaneous/functions.html",[4,0.898,9,0.498,13,0.343,14,0.051,19,1.158,32,0.774,38,0.658,46,0.867,73,1.034,75,0.898,106,0.738,107,0.027,108,0.036,109,0.027,110,2.731,113,1.511,114,2.595,120,3.653,121,2.747,131,1.738,132,2.021,135,3.312,139,2.021,142,2.672,148,3.403,150,2.021,151,2.239,160,1.998,169,2.382,170,2.574,178,2.672,195,2.021,208,2.298,211,2.926,215,2.739,226,2.298,227,3.185,255,3.673,283,2.401,286,2.401,287,2.401,288,3.174,289,3.556,290,2.401,291,2.401,292,2.401,293,2.401,294,2.401,295,3.174,296,2.994,298,3.174,306,2.401,307,3.174,330,1.02,333,2.021,334,2.977,335,4.042,336,2.977,337,2.977,338,2.977,339,2.977,340,2.977,341,2.977,342,2.977,343,2.977,344,3.936,345,2.977,346,4.409,347,2.977,348,2.977,349,2.977,350,2.977,351,2.977,352,2.977,353,2.977]],["title/index.html",[9,0.397,354,1.912,355,1.61]],["body/index.html",[0,0.046,8,0.763,11,1.061,13,0.292,14,0.052,15,1.167,16,0.713,17,1.067,19,0.426,22,0.37,23,1.091,24,0.488,32,0.798,38,0.596,46,0.798,58,0.426,63,0.426,65,0.556,73,0.82,75,1.002,77,0.927,83,0.319,86,0.806,87,0.319,88,0.763,89,1.03,92,0.695,97,0.426,98,0.488,101,1.061,102,0.763,103,0.874,104,0.633,105,0.633,106,0.71,107,0.015,108,0.023,109,0.015,116,2.062,118,1.586,121,0.824,128,0.99,129,1.219,137,1.945,140,2.12,141,2.229,144,1.102,146,2.397,151,0.824,154,2.881,157,2.982,159,2.397,160,0.824,162,1.102,164,1.723,169,2.707,170,2.746,177,2.12,183,1.102,191,1.102,197,1.723,215,2.061,221,3.448,225,0.824,246,1.102,253,2.881,258,2.601,259,2.154,262,1.102,269,2.982,270,1.102,272,2.397,273,2.061,274,2.12,275,2.12,276,1.723,277,2.397,296,2.397,310,2.046,311,0.947,333,1.102,355,1.102,356,4.78,357,2.537,358,2.537,359,1.623,360,1.623,361,1.623,362,1.623,363,1.623,364,1.623,365,1.309,366,1.623,367,1.309,368,1.623,369,1.623,370,1.623,371,1.623,372,1.623,373,1.623,374,1.623,375,1.309,376,1.623,377,4.244,378,1.623,379,4.616,380,1.623,381,3.123,382,1.623,383,1.623,384,2.537,385,1.309,386,3.531,387,1.623,388,4.062,389,2.537,390,1.623,391,4.244,392,1.623,393,2.537,394,1.623,395,1.623,396,1.623,397,1.623,398,1.623,399,1.623,400,1.623,401,2.537,402,1.623,403,1.623,404,1.623,405,1.623,406,1.623,407,1.623,408,1.623,409,4.514,410,3.123,411,1.623,412,1.623,413,1.623,414,2.537,415,1.623,416,1.623,417,1.623,418,1.623,419,1.623,420,1.623,421,1.623,422,3.123,423,1.623,424,2.537,425,2.537,426,1.623,427,1.623,428,1.623,429,3.123,430,1.623,431,1.623,432,1.623,433,1.623,434,1.309,435,1.623,436,2.537,437,1.623,438,1.623,439,1.623,440,1.623,441,1.623,442,1.623,443,1.623,444,1.623,445,1.623,446,1.623,447,1.623,448,1.623,449,5.263,450,1.623,451,3.123,452,1.623,453,1.623,454,1.623,455,1.623,456,1.623,457,1.623,458,1.623,459,1.623,460,1.623,461,1.623,462,1.623,463,2.537,464,1.623,465,1.623,466,1.623,467,1.623,468,1.623,469,1.623,470,1.623,471,1.623,472,1.623,473,1.623,474,1.623,475,1.623,476,1.623,477,1.623,478,1.623,479,1.623,480,1.623,481,1.623,482,3.123,483,1.623,484,2.537,485,1.623,486,1.623,487,1.623,488,1.623,489,1.623,490,3.123,491,1.623,492,2.537,493,1.623,494,1.623,495,1.623,496,4.062,497,1.623,498,1.309,499,1.623,500,1.623,501,1.623,502,1.623,503,2.537,504,2.537,505,2.537,506,1.623,507,1.623,508,2.046,509,1.623,510,1.623,511,1.623,512,1.623,513,1.623,514,1.623,515,1.623,516,1.623,517,2.537,518,2.537,519,1.623,520,1.623,521,1.623,522,1.623,523,1.623,524,1.623,525,1.623,526,1.623,527,2.537,528,3.123,529,1.623,530,1.623,531,1.623,532,1.623,533,1.623,534,1.623,535,1.623,536,1.623,537,1.623,538,1.623,539,1.623,540,1.623,541,1.623,542,1.623,543,1.102,544,1.309]],["title/license.html",[354,1.912,355,1.61,543,1.61]],["body/license.html",[14,0.041,107,0.033,108,0.041,109,0.033,280,2.933,365,3.607,434,2.933,498,2.933,508,2.933,543,2.469,544,2.933,545,4.843,546,3.637,547,3.637,548,3.637,549,4.472,550,3.637,551,3.637,552,3.637,553,3.637,554,3.637,555,3.637,556,4.472,557,5.445,558,3.637,559,3.637,560,3.637,561,4.843,562,3.637,563,4.472,564,3.637,565,3.637,566,3.637,567,3.637,568,3.637,569,3.637,570,3.637,571,3.637,572,3.637,573,4.472,574,3.637,575,3.637,576,3.637,577,3.637,578,3.637,579,3.637,580,3.637,581,4.472,582,4.472,583,3.637,584,3.637,585,3.637,586,3.637,587,3.637,588,3.637,589,3.637,590,3.637,591,3.637,592,3.637,593,3.637,594,3.637,595,3.637,596,3.637,597,3.637,598,3.637,599,3.637,600,3.637,601,3.637,602,3.637,603,3.637,604,3.637,605,3.637,606,3.637,607,3.637,608,2.933,609,3.637,610,3.637]],["title/modules.html",[260,2.571]],["body/modules.html",[14,0.045,107,0.04,108,0.045,109,0.04,259,2.211,260,2.957,611,4.355,612,4.355,613,4.355]],["title/overview.html",[614,3.054]],["body/overview.html",[2,1.45,14,0.045,107,0.039,108,0.045,109,0.039,112,2.872,258,3.323,273,2.469,278,2.872,311,2.469,367,3.411,375,3.411,385,3.411,608,3.411,614,3.411,615,4.23,616,4.23,617,4.894,618,4.23,619,4.23]],["title/miscellaneous/typealiases.html",[330,0.813,620,3.367]],["body/miscellaneous/typealiases.html",[6,1.017,9,0.648,13,0.446,14,0.048,65,1.769,72,1.942,75,0.883,76,1.942,77,1.22,78,2.014,79,1.812,82,1.812,83,0.913,87,0.761,90,1.812,95,1.812,96,1.06,97,1.22,107,0.035,108,0.042,109,0.035,113,1.966,114,2.358,131,2.712,137,2.527,330,1.327,332,3.771,335,3.122,621,3.872]],["title/miscellaneous/variables.html",[330,0.813,622,2.715]],["body/miscellaneous/variables.html",[6,0.744,9,0.474,13,0.624,14,0.052,16,0.869,26,2.117,27,1.105,28,1,29,1.105,30,0.904,31,1.105,32,0.748,33,1.105,34,1,35,1.105,36,1,37,1.105,38,0.534,39,1.105,40,1,41,1.105,42,1,43,1.105,44,1,45,1.105,46,0.748,47,1.105,48,1,49,1.105,50,1,51,1.105,52,1,53,1.105,54,1.305,55,1.105,58,1,59,1.144,60,1.144,61,1.144,62,1.144,63,1,64,1.144,84,1.208,107,0.026,108,0.035,109,0.026,127,1.692,128,1.485,129,1.485,225,2.837,267,3.794,299,2.284,302,2.284,330,0.971,332,3.684,622,2.284,623,4.599,624,5.132,625,2.832,626,2.832,627,2.832,628,2.832,629,2.832,630,2.832,631,2.832,632,2.832,633,2.832,634,2.832,635,2.832,636,2.832]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":367,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2",{"_index":375,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.4",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":547,"title":{},"body":{"license.html":{}}}],["3",{"_index":405,"title":{},"body":{"index.html":{}}}],["3.1",{"_index":408,"title":{},"body":{"index.html":{}}}],["3.1.1",{"_index":420,"title":{},"body":{"index.html":{}}}],["3.2",{"_index":428,"title":{},"body":{"index.html":{}}}],["3.3",{"_index":448,"title":{},"body":{"index.html":{}}}],["3.3.1",{"_index":450,"title":{},"body":{"index.html":{}}}],["3.3.1.1",{"_index":452,"title":{},"body":{"index.html":{}}}],["3.3.1.2",{"_index":454,"title":{},"body":{"index.html":{}}}],["3.3.1.3",{"_index":455,"title":{},"body":{"index.html":{}}}],["3.3.2",{"_index":456,"title":{},"body":{"index.html":{}}}],["3.3.3",{"_index":457,"title":{},"body":{"index.html":{}}}],["3.3.4",{"_index":458,"title":{},"body":{"index.html":{}}}],["3.4",{"_index":459,"title":{},"body":{"index.html":{}}}],["3.4.1",{"_index":460,"title":{},"body":{"index.html":{}}}],["3.4.1.1",{"_index":461,"title":{},"body":{"index.html":{}}}],["3.4.1.2",{"_index":464,"title":{},"body":{"index.html":{}}}],["3.4.1.3",{"_index":465,"title":{},"body":{"index.html":{}}}],["3.4.2",{"_index":466,"title":{},"body":{"index.html":{}}}],["3.4.3",{"_index":467,"title":{},"body":{"index.html":{}}}],["3.4.4",{"_index":468,"title":{},"body":{"index.html":{}}}],["4",{"_index":516,"title":{},"body":{"index.html":{}}}],["4.5",{"_index":469,"title":{},"body":{"index.html":{}}}],["4.5.1",{"_index":470,"title":{},"body":{"index.html":{}}}],["4.5.2",{"_index":472,"title":{},"body":{"index.html":{}}}],["4.5.2.1",{"_index":473,"title":{},"body":{"index.html":{}}}],["4.5.2.2",{"_index":474,"title":{},"body":{"index.html":{}}}],["4.5.2.3",{"_index":475,"title":{},"body":{"index.html":{}}}],["4.5.3",{"_index":476,"title":{},"body":{"index.html":{}}}],["4.5.4",{"_index":477,"title":{},"body":{"index.html":{}}}],["4.5.5",{"_index":478,"title":{},"body":{"index.html":{}}}],["4.6",{"_index":479,"title":{},"body":{"index.html":{}}}],["4.7",{"_index":480,"title":{},"body":{"index.html":{}}}],["4.8",{"_index":495,"title":{},"body":{"index.html":{}}}],["4.8.1",{"_index":502,"title":{},"body":{"index.html":{}}}],["4.8.2",{"_index":507,"title":{},"body":{"index.html":{}}}],["4.8.3",{"_index":510,"title":{},"body":{"index.html":{}}}],["4.8.4",{"_index":511,"title":{},"body":{"index.html":{}}}],["4.8.5",{"_index":514,"title":{},"body":{"index.html":{}}}],["5",{"_index":531,"title":{},"body":{"index.html":{}}}],["6",{"_index":542,"title":{},"body":{"index.html":{}}}],["6.5.2",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":619,"title":{},"body":{"overview.html":{}}}],["8.2.3",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["_____________________________________________________________________________",{"_index":149,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["_headers",{"_index":161,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["_headers[key",{"_index":168,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["above",{"_index":580,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":91,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["action",{"_index":604,"title":{},"body":{"license.html":{}}}],["add",{"_index":370,"title":{},"body":{"index.html":{}}}],["ahin",{"_index":534,"title":{},"body":{"index.html":{}}}],["ali",{"_index":533,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":621,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allguards",{"_index":228,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["allguards.reduce((prev",{"_index":231,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["and/or",{"_index":571,"title":{},"body":{"license.html":{}}}],["angular",{"_index":357,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":22,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["angular/compiler",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":17,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":361,"title":{},"body":{"index.html":{}}}],["aot",{"_index":517,"title":{},"body":{"index.html":{}}}],["api",{"_index":406,"title":{},"body":{"index.html":{}}}],["app",{"_index":395,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":378,"title":{},"body":{"index.html":{}}}],["append",{"_index":180,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["appmodule",{"_index":386,"title":{},"body":{"index.html":{}}}],["args",{"_index":85,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["args[bodyparamindex",{"_index":156,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["args[index",{"_index":182,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["arising",{"_index":607,"title":{},"body":{"license.html":{}}}],["array",{"_index":78,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["associated",{"_index":558,"title":{},"body":{"license.html":{}}}],["async",{"_index":144,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["authors",{"_index":598,"title":{},"body":{"license.html":{}}}],["available",{"_index":612,"title":{},"body":{"modules.html":{}}}],["await",{"_index":164,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["base",{"_index":157,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["base_handlers",{"_index":527,"title":{},"body":{"index.html":{}}}],["base_headers",{"_index":128,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":30,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["base_with_credentials",{"_index":129,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["basehandler",{"_index":528,"title":{},"body":{"index.html":{}}}],["baseheaders",{"_index":103,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["baseurl",{"_index":102,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["basic",{"_index":376,"title":{},"body":{"index.html":{}}}],["best",{"_index":426,"title":{},"body":{"index.html":{}}}],["bodies",{"_index":36,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":151,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bodyparamindex",{"_index":152,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["bootstrap",{"_index":616,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":613,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["builder",{"_index":430,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":114,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["builder.ts:11",{"_index":119,"title":{},"body":{"classes/GuardForbid.html":{}}}],["builder.ts:13",{"_index":122,"title":{},"body":{"classes/GuardForbid.html":{}}}],["builds",{"_index":520,"title":{},"body":{"index.html":{}}}],["c",{"_index":546,"title":{},"body":{"license.html":{}}}],["cache.service",{"_index":491,"title":{},"body":{"index.html":{}}}],["call",{"_index":482,"title":{},"body":{"index.html":{}}}],["called",{"_index":484,"title":{},"body":{"index.html":{}}}],["calling",{"_index":481,"title":{},"body":{"index.html":{}}}],["calls",{"_index":414,"title":{},"body":{"index.html":{}}}],["case",{"_index":223,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["catch",{"_index":198,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["caution",{"_index":366,"title":{},"body":{"index.html":{}}}],["chainhandlers",{"_index":208,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chainhandlers(handlers",{"_index":345,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charge",{"_index":553,"title":{},"body":{"license.html":{}}}],["claim",{"_index":601,"title":{},"body":{"license.html":{}}}],["class",{"_index":92,"title":{"classes/GuardForbid.html":{},"classes/HeadersInjector.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":112,"title":{},"body":{"classes/GuardForbid.html":{},"classes/HeadersInjector.html":{},"overview.html":{}}}],["client",{"_index":169,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["client(undefined",{"_index":347,"title":{},"body":{"miscellaneous/functions.html":{}}}],["client_guards",{"_index":34,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client_handlers",{"_index":40,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client_headers",{"_index":48,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client_with_credentials",{"_index":52,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientconstructor",{"_index":1,"title":{"interfaces/ClientConstructor.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["clienthandlers",{"_index":204,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["clientheaders",{"_index":171,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["clientinstance",{"_index":99,"title":{"interfaces/ClientInstance.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["clientoptions",{"_index":101,"title":{"interfaces/ClientOptions.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"index.html":{}}}],["code",{"_index":485,"title":{},"body":{"index.html":{}}}],["completely",{"_index":539,"title":{},"body":{"index.html":{}}}],["component",{"_index":393,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":579,"title":{},"body":{"license.html":{}}}],["config",{"_index":215,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["configure",{"_index":146,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["configured",{"_index":418,"title":{},"body":{"index.html":{}}}],["configures",{"_index":421,"title":{},"body":{"index.html":{}}}],["connection",{"_index":609,"title":{},"body":{"license.html":{}}}],["const",{"_index":24,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["construction",{"_index":489,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["constructor(injector",{"_index":522,"title":{},"body":{"index.html":{}}}],["constructor(private",{"_index":399,"title":{},"body":{"index.html":{}}}],["constructor(request",{"_index":117,"title":{},"body":{"classes/GuardForbid.html":{}}}],["context",{"_index":227,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["context)[next](request",{"_index":235,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["context[injector].get(next",{"_index":247,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["context[next]).bind(context",{"_index":244,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["context[next][error_handler",{"_index":243,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["contract",{"_index":605,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":532,"title":{},"body":{"index.html":{}}}],["cookies",{"_index":501,"title":{},"body":{"index.html":{}}}],["copies",{"_index":573,"title":{},"body":{"license.html":{}}}],["copy",{"_index":556,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":545,"title":{},"body":{"license.html":{}}}],["core",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":279,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":188,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["created",{"_index":486,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":183,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["credentials.decorator.ts",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["current",{"_index":81,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["damages",{"_index":602,"title":{},"body":{"license.html":{}}}],["deal",{"_index":560,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":610,"title":{},"body":{"license.html":{}}}],["declaration",{"_index":451,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":385,"title":{},"body":{"index.html":{},"overview.html":{}}}],["declarative",{"_index":360,"title":{},"body":{"index.html":{}}}],["declared",{"_index":422,"title":{},"body":{"index.html":{}}}],["decorator",{"_index":409,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":429,"title":{},"body":{"index.html":{}}}],["default",{"_index":225,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":432,"title":{},"body":{"index.html":{}}}],["defined",{"_index":118,"title":{},"body":{"classes/GuardForbid.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"modules/RestModule.html":{},"index.html":{}}}],["defines",{"_index":497,"title":{},"body":{"index.html":{}}}],["defining",{"_index":419,"title":{},"body":{"index.html":{}}}],["delete",{"_index":60,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["delete(path",{"_index":442,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":311,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descriptor",{"_index":134,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["descriptor.value",{"_index":143,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["determined",{"_index":449,"title":{},"body":{"index.html":{}}}],["developed",{"_index":463,"title":{},"body":{"index.html":{}}}],["development",{"_index":364,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":569,"title":{},"body":{"license.html":{}}}],["docs",{"_index":407,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":280,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dynamic",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["empty",{"_index":437,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":433,"title":{},"body":{"index.html":{}}}],["enum",{"_index":56,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["enumerations",{"_index":331,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":115,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["error_handler",{"_index":42,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":289,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["errorhandlers",{"_index":471,"title":{},"body":{"index.html":{}}}],["especially",{"_index":505,"title":{},"body":{"index.html":{}}}],["etc",{"_index":524,"title":{},"body":{"index.html":{}}}],["event",{"_index":597,"title":{},"body":{"license.html":{}}}],["example",{"_index":377,"title":{},"body":{"index.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["exports",{"_index":278,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"overview.html":{}}}],["express",{"_index":588,"title":{},"body":{"license.html":{}}}],["extends",{"_index":7,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["false",{"_index":197,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["files",{"_index":559,"title":{},"body":{"license.html":{}}}],["first",{"_index":521,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":593,"title":{},"body":{"license.html":{}}}],["following",{"_index":578,"title":{},"body":{"license.html":{}}}],["forbad",{"_index":138,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["forbidden",{"_index":483,"title":{},"body":{"index.html":{}}}],["fork",{"_index":537,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":263,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["forroot(undefined",{"_index":264,"title":{},"body":{"modules/RestModule.html":{}}}],["free",{"_index":552,"title":{},"body":{"license.html":{}}}],["full",{"_index":147,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["function",{"_index":137,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["function(this",{"_index":145,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["functionality",{"_index":413,"title":{},"body":{"index.html":{}}}],["functions",{"_index":333,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["functionsof",{"_index":65,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":576,"title":{},"body":{"license.html":{}}}],["get(path",{"_index":439,"title":{},"body":{"index.html":{}}}],["getting",{"_index":354,"title":{"index.html":{},"license.html":{}},"body":{}}],["globalhandlers",{"_index":200,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["going",{"_index":435,"title":{},"body":{"index.html":{}}}],["granted",{"_index":551,"title":{},"body":{"license.html":{}}}],["graph",{"_index":611,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":77,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["guardforbid",{"_index":111,"title":{"classes/GuardForbid.html":{}},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["guardforbid(request",{"_index":199,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["guardfunction",{"_index":72,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["guardfunctions",{"_index":349,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guardfunctionsof",{"_index":76,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["guards",{"_index":32,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["guards(guardfunctions",{"_index":348,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guardsresult",{"_index":194,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["handle",{"_index":98,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["handler",{"_index":86,"title":{"interfaces/Handler.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{}}}],["handler(original",{"_index":252,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["handler.decorator.ts",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlerfunction",{"_index":79,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["handlerfunctionsof",{"_index":82,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["handlers",{"_index":38,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["handlers(handlers",{"_index":350,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlers.reduce((prev",{"_index":241,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["handlersof",{"_index":83,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["head",{"_index":62,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head(path",{"_index":445,"title":{},"body":{"index.html":{}}}],["header",{"_index":160,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["header(name",{"_index":351,"title":{},"body":{"miscellaneous/functions.html":{}}}],["header[key",{"_index":176,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["headerinjector",{"_index":453,"title":{},"body":{"index.html":{}}}],["headerinjectorresponse",{"_index":90,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["headerinjectortype",{"_index":95,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":46,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers(headers",{"_index":352,"title":{},"body":{"miscellaneous/functions.html":{}}}],["headers.append(key",{"_index":167,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["headers[method](name",{"_index":181,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["headersclientparam",{"_index":97,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["headersinjector",{"_index":93,"title":{"classes/HeadersInjector.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["headersobject",{"_index":87,"title":{"interfaces/HeadersObject.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["headersparam",{"_index":96,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/typealiases.html":{}}}],["hello",{"_index":397,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":550,"title":{},"body":{"license.html":{}}}],["holders",{"_index":599,"title":{},"body":{"license.html":{}}}],["http",{"_index":358,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":384,"title":{},"body":{"index.html":{}}}],["http_client",{"_index":28,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":18,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["httpclientmodule",{"_index":271,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["httperrorresponse",{"_index":21,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["httpheaders",{"_index":124,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["httprequest",{"_index":19,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["httprequest(method",{"_index":224,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["httpresponse",{"_index":20,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["identifier",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":589,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["imports",{"_index":272,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["included",{"_index":583,"title":{},"body":{"license.html":{}}}],["including",{"_index":563,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":256,"title":{},"body":{"interfaces/HeadersObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["inject",{"_index":94,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["injectable",{"_index":246,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["injectable.handle.bind(injectable",{"_index":249,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["injectable.handle[error_handler",{"_index":248,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["injectiontoken('base_headers",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('base_with_credentials",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('rest_base_url",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('rest_handlers",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":16,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inserttodo(@body",{"_index":390,"title":{},"body":{"index.html":{}}}],["inside",{"_index":423,"title":{},"body":{"index.html":{}}}],["install",{"_index":373,"title":{},"body":{"index.html":{}}}],["installation",{"_index":368,"title":{},"body":{"index.html":{}}}],["instance",{"_index":162,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["instance.inject",{"_index":165,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["instanceof",{"_index":236,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{},"overview.html":{}}}],["js",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["jsonp",{"_index":64,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["jsonp(path",{"_index":446,"title":{},"body":{"index.html":{}}}],["key",{"_index":88,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["keyof",{"_index":67,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["kind",{"_index":587,"title":{},"body":{"license.html":{}}}],["legend",{"_index":615,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":603,"title":{},"body":{"license.html":{}}}],["liable",{"_index":600,"title":{},"body":{"license.html":{}}}],["license",{"_index":543,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":564,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":518,"title":{},"body":{"index.html":{}}}],["limited",{"_index":590,"title":{},"body":{"license.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/ClientConstructor.html":{}}}],["make",{"_index":401,"title":{},"body":{"index.html":{}}}],["makes",{"_index":416,"title":{},"body":{"index.html":{}}}],["mark",{"_index":487,"title":{},"body":{"index.html":{}}}],["marked",{"_index":415,"title":{},"body":{"index.html":{}}}],["marks",{"_index":410,"title":{},"body":{"index.html":{}}}],["matching",{"_index":108,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":592,"title":{},"body":{"license.html":{}}}],["merge",{"_index":567,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":170,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["methodhandlers",{"_index":206,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["methodheaders",{"_index":173,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["methodname",{"_index":142,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":253,"title":{},"body":{"classes/HeadersInjector.html":{},"modules/RestModule.html":{},"index.html":{}}}],["miscellaneous",{"_index":330,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":544,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":566,"title":{},"body":{"license.html":{}}}],["module",{"_index":258,"title":{"modules/RestModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":260,"title":{"modules.html":{}},"body":{"modules/RestModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":268,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["more",{"_index":362,"title":{},"body":{"index.html":{}}}],["multi",{"_index":276,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["name",{"_index":121,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["never}[keyof",{"_index":71,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["new",{"_index":84,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":202,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["next(request",{"_index":234,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["next.prototype",{"_index":245,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["next[error_handler",{"_index":250,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["ngmodule",{"_index":269,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["noninfringement",{"_index":596,"title":{},"body":{"license.html":{}}}],["notice",{"_index":581,"title":{},"body":{"license.html":{}}}],["now",{"_index":541,"title":{},"body":{"index.html":{}}}],["npm",{"_index":372,"title":{},"body":{"index.html":{}}}],["null",{"_index":154,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["number",{"_index":100,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["object",{"_index":8,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["object.entries((target.constructor[param_headers",{"_index":179,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["object.keys(_headers",{"_index":166,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["object.keys(header",{"_index":175,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["observable",{"_index":125,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["obtaining",{"_index":555,"title":{},"body":{"license.html":{}}}],["on_client_ready",{"_index":54,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["onclientready",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["onready",{"_index":424,"title":{},"body":{"index.html":{}}}],["option",{"_index":496,"title":{},"body":{"index.html":{}}}],["optional",{"_index":110,"title":{},"body":{"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":63,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options(path",{"_index":444,"title":{},"body":{"index.html":{}}}],["original",{"_index":80,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["otherservices",{"_index":523,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":434,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":608,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outgoing",{"_index":500,"title":{},"body":{"index.html":{}}}],["overview",{"_index":614,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":66,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["package",{"_index":310,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["param_headers",{"_index":44,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameter",{"_index":177,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["parameterdecorator",{"_index":344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":120,"title":{},"body":{"classes/GuardForbid.html":{},"modules/RestModule.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":594,"title":{},"body":{"license.html":{}}}],["passed",{"_index":233,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["patch",{"_index":61,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["patch(path",{"_index":443,"title":{},"body":{"index.html":{}}}],["path",{"_index":140,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["permission",{"_index":549,"title":{},"body":{"license.html":{}}}],["permit",{"_index":574,"title":{},"body":{"license.html":{}}}],["person",{"_index":554,"title":{},"body":{"license.html":{}}}],["persons",{"_index":575,"title":{},"body":{"license.html":{}}}],["portions",{"_index":585,"title":{},"body":{"license.html":{}}}],["post",{"_index":58,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post('todos",{"_index":389,"title":{},"body":{"index.html":{}}}],["post(path",{"_index":440,"title":{},"body":{"index.html":{}}}],["posttodo(@body",{"_index":447,"title":{},"body":{"index.html":{}}}],["posttodo(todo",{"_index":403,"title":{},"body":{"index.html":{}}}],["prev",{"_index":203,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["prev.then(passed",{"_index":232,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["prev[method](res",{"_index":251,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["private",{"_index":492,"title":{},"body":{"index.html":{}}}],["process",{"_index":192,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["projects/.../body.decorator.ts",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../client.decorator.ts",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../error",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../guards.decorator.ts",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../handlers.decorator.ts",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../header.decorator.ts",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../headers.decorator.ts",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../on",{"_index":342,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../request",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../request.decorator.ts",{"_index":624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tokens.ts",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../types.ts",{"_index":332,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../with",{"_index":343,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/body.decorator.ts",{"_index":283,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/client.decorator.ts",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/error",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/guards.decorator.ts",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/handlers.decorator.ts",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/header.decorator.ts",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/headers.decorator.ts",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/on",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/request",{"_index":113,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/rest/src/lib/request.decorator.ts",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/rest.module.ts",{"_index":261,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["projects/rest/src/lib/rest.module.ts:29",{"_index":266,"title":{},"body":{"modules/RestModule.html":{}}}],["projects/rest/src/lib/tokens.ts",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/types.ts",{"_index":6,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/types.ts:41",{"_index":257,"title":{},"body":{"interfaces/HeadersObject.html":{}}}],["projects/rest/src/lib/types.ts:48",{"_index":254,"title":{},"body":{"classes/HeadersInjector.html":{}}}],["projects/rest/src/lib/with",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":75,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["promise.resolve(true",{"_index":238,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["promiselike",{"_index":242,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{}}}],["propertydescriptor",{"_index":135,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":133,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["provide",{"_index":274,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["provided",{"_index":508,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":104,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{}}}],["provider",{"_index":270,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["providers",{"_index":273,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":412,"title":{},"body":{"index.html":{}}}],["public",{"_index":116,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["publish",{"_index":568,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":595,"title":{},"body":{"license.html":{}}}],["put",{"_index":59,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["put(path",{"_index":441,"title":{},"body":{"index.html":{}}}],["ready.decorator.ts",{"_index":295,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["refactored",{"_index":540,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":178,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["repository",{"_index":536,"title":{},"body":{"index.html":{}}}],["request",{"_index":73,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["requestbuilder",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["requestbuilder(requestmethod.delete",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.get",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.head",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.jsonp",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.options",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.patch",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.post",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.put",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(type",{"_index":139,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["requestconfig",{"_index":210,"title":{"interfaces/RequestConfig.html":{}},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["requestfactory",{"_index":211,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["requestfactory(method",{"_index":346,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requestfactory(type",{"_index":189,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod",{"_index":57,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/enumerations.html":{}}}],["requestmethod.delete",{"_index":217,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.get",{"_index":216,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.head",{"_index":218,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.jsonp",{"_index":219,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.options",{"_index":220,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.patch",{"_index":214,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.post",{"_index":212,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.put",{"_index":213,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requests",{"_index":503,"title":{},"body":{"index.html":{}}}],["res",{"_index":240,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["reset",{"_index":618,"title":{},"body":{"overview.html":{}}}],["rest",{"_index":221,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["rest_handlers",{"_index":127,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restclient",{"_index":411,"title":{},"body":{"index.html":{}}}],["restguard",{"_index":462,"title":{},"body":{"index.html":{}}}],["restmodule",{"_index":259,"title":{"modules/RestModule.html":{}},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{},"modules.html":{}}}],["restmodule.forroot",{"_index":526,"title":{},"body":{"index.html":{}}}],["restmodule.forroot({baseurl",{"_index":383,"title":{},"body":{"index.html":{}}}],["restmodule.forroot({withcredentials",{"_index":506,"title":{},"body":{"index.html":{}}}],["restor",{"_index":371,"title":{},"body":{"index.html":{}}}],["restpropertydecorator",{"_index":131,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restriction",{"_index":562,"title":{},"body":{"license.html":{}}}],["result",{"_index":107,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.topromise",{"_index":237,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["results",{"_index":109,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":141,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["returning",{"_index":438,"title":{},"body":{"index.html":{}}}],["returns",{"_index":255,"title":{},"body":{"classes/HeadersInjector.html":{},"modules/RestModule.html":{},"miscellaneous/functions.html":{}}}],["right",{"_index":488,"title":{},"body":{"index.html":{}}}],["rights",{"_index":565,"title":{},"body":{"license.html":{}}}],["root",{"_index":105,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{}}}],["rootconfiguration",{"_index":265,"title":{"interfaces/RootConfiguration.html":{}},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["run",{"_index":191,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["rxjs",{"_index":126,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"dependencies.html":{}}}],["save",{"_index":374,"title":{},"body":{"index.html":{}}}],["secret",{"_index":425,"title":{},"body":{"index.html":{}}}],["selector",{"_index":394,"title":{},"body":{"index.html":{}}}],["sell",{"_index":572,"title":{},"body":{"license.html":{}}}],["sent",{"_index":499,"title":{},"body":{"index.html":{}}}],["service",{"_index":417,"title":{},"body":{"index.html":{}}}],["services",{"_index":529,"title":{},"body":{"index.html":{}}}],["set",{"_index":159,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["shall",{"_index":582,"title":{},"body":{"license.html":{}}}],["shouldn't",{"_index":525,"title":{},"body":{"index.html":{}}}],["software",{"_index":557,"title":{},"body":{"license.html":{}}}],["something",{"_index":402,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/functions.html":{}}}],["source.then(res",{"_index":239,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["specified",{"_index":431,"title":{},"body":{"index.html":{}}}],["started",{"_index":355,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startguardcheck",{"_index":226,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["startguardcheck(target",{"_index":195,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":262,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["steven166/angular",{"_index":538,"title":{},"body":{"index.html":{}}}],["string",{"_index":89,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["subject",{"_index":577,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":570,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":584,"title":{},"body":{"license.html":{}}}],["super('a",{"_index":136,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["supports",{"_index":519,"title":{},"body":{"index.html":{}}}],["switch",{"_index":222,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["symbol",{"_index":26,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('base_url",{"_index":31,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('bodies",{"_index":37,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_guards",{"_index":35,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_handlers",{"_index":41,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_headers",{"_index":49,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_with_credentials",{"_index":53,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('error_handler",{"_index":43,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('guards",{"_index":33,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('handlers",{"_index":39,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('headers",{"_index":47,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('http_client",{"_index":29,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('injector",{"_index":27,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('on_client_ready",{"_index":55,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('param_headers",{"_index":45,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('with_credentials",{"_index":51,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":68,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["t[p",{"_index":69,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["table",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":132,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["target.constructor[bodies",{"_index":153,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[guards][client_guards",{"_index":229,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[guards][methodname",{"_index":230,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[handlers][client_handlers",{"_index":205,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[handlers][methodname",{"_index":207,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[headers",{"_index":172,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[with_credentials",{"_index":185,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[with_credentials][client_with_credentials",{"_index":186,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[with_credentials][methodname",{"_index":187,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["template",{"_index":396,"title":{},"body":{"index.html":{}}}],["thalesrc",{"_index":548,"title":{},"body":{"license.html":{}}}],["thalesrc/angular",{"_index":356,"title":{},"body":{"index.html":{}}}],["this.client.inserttodo(todo",{"_index":404,"title":{},"body":{"index.html":{}}}],["this.client.todos().then(todos",{"_index":400,"title":{},"body":{"index.html":{}}}],["this.todocacheservice.cachetodos(todos",{"_index":494,"title":{},"body":{"index.html":{}}}],["this.todos",{"_index":493,"title":{},"body":{"index.html":{}}}],["this[base_url]}/${url",{"_index":190,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[header",{"_index":174,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[http_client].request(request).topromise",{"_index":209,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(base_headers",{"_index":158,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(base_with_credentials",{"_index":184,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(header",{"_index":163,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(rest_handlers)).reduce((prev",{"_index":201,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["throw",{"_index":196,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["todo",{"_index":391,"title":{},"body":{"index.html":{}}}],["todo.client",{"_index":380,"title":{},"body":{"index.html":{}}}],["todo.client.ts",{"_index":387,"title":{},"body":{"index.html":{}}}],["todo.component",{"_index":382,"title":{},"body":{"index.html":{}}}],["todo.component.ts",{"_index":392,"title":{},"body":{"index.html":{}}}],["todocacheservice",{"_index":490,"title":{},"body":{"index.html":{}}}],["todoclient",{"_index":379,"title":{},"body":{"index.html":{}}}],["todocomponent",{"_index":381,"title":{},"body":{"index.html":{}}}],["todos",{"_index":388,"title":{},"body":{"index.html":{}}}],["token",{"_index":509,"title":{},"body":{"index.html":{}}}],["tokens",{"_index":130,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["top",{"_index":512,"title":{},"body":{"index.html":{}}}],["topsecret",{"_index":530,"title":{},"body":{"index.html":{}}}],["tort",{"_index":606,"title":{},"body":{"license.html":{}}}],["true",{"_index":277,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["try",{"_index":193,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":620,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":155,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["types",{"_index":123,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["typescript",{"_index":359,"title":{},"body":{"index.html":{}}}],["u",{"_index":70,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["undefined",{"_index":150,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":363,"title":{},"body":{"index.html":{}}}],["unique",{"_index":25,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["unless",{"_index":504,"title":{},"body":{"index.html":{}}}],["url",{"_index":148,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":365,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":436,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":275,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["util",{"_index":427,"title":{},"body":{"index.html":{}}}],["value",{"_index":267,"title":{},"body":{"modules/RestModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":622,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":591,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":586,"title":{},"body":{"license.html":{}}}],["whether",{"_index":498,"title":{},"body":{"index.html":{},"license.html":{}}}],["with_credentials",{"_index":50,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["withcredentials",{"_index":106,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["withcredentials(true",{"_index":513,"title":{},"body":{"index.html":{}}}],["withcredentials(withcredentials",{"_index":353,"title":{},"body":{"miscellaneous/functions.html":{}}}],["withcredentialsparam",{"_index":515,"title":{},"body":{"index.html":{}}}],["without",{"_index":561,"title":{},"body":{"license.html":{}}}],["world",{"_index":398,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":369,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":617,"title":{},"body":{"overview.html":{}}}],["zçelik",{"_index":535,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ClientConstructor.html":{"url":"interfaces/ClientConstructor.html","title":"interface - ClientConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Object\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        constructor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constructor\n                                    \n                                \n                                \n                                    \n                                        constructor:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\nexport const WITH_CREDENTIALS: unique symbol = Symbol('WITH_CREDENTIALS');\nexport const CLIENT_WITH_CREDENTIALS: unique symbol = Symbol('CLIENT_WITH_CREDENTIALS');\nexport const ON_CLIENT_READY: unique symbol = Symbol('ON_CLIENT_READY');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    };\n    [WITH_CREDENTIALS]: {\n      [CLIENT_WITH_CREDENTIALS]: boolean;\n      [key: string]: boolean;\n    };\n    [ON_CLIENT_READY]: string;\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  withCredentials?: boolean;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientInstance.html":{"url":"interfaces/ClientInstance.html","title":"interface - ClientInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        BASE_URL\n                                \n                                \n                                        HTTP_CLIENT\n                                \n                                \n                                        INJECTOR\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BASE_URL\n                                    \n                                \n                                \n                                    \n                                        BASE_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HTTP_CLIENT\n                                    \n                                \n                                \n                                    \n                                        HTTP_CLIENT:         HttpClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpClient\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        INJECTOR\n                                    \n                                \n                                \n                                    \n                                        INJECTOR:         Injector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Injector\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\nexport const WITH_CREDENTIALS: unique symbol = Symbol('WITH_CREDENTIALS');\nexport const CLIENT_WITH_CREDENTIALS: unique symbol = Symbol('CLIENT_WITH_CREDENTIALS');\nexport const ON_CLIENT_READY: unique symbol = Symbol('ON_CLIENT_READY');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    };\n    [WITH_CREDENTIALS]: {\n      [CLIENT_WITH_CREDENTIALS]: boolean;\n      [key: string]: boolean;\n    };\n    [ON_CLIENT_READY]: string;\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  withCredentials?: boolean;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientOptions.html":{"url":"interfaces/ClientOptions.html","title":"interface - ClientOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseHeaders\n                                \n                                \n                                            Optional\n                                        baseUrl\n                                \n                                \n                                            Optional\n                                        guards\n                                \n                                \n                                            Optional\n                                        handlers\n                                \n                                \n                                            Optional\n                                        providedIn\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHeaders\n                                    \n                                \n                                \n                                    \n                                        baseHeaders:         HeadersClientParam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HeadersClientParam\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                    \n                                \n                                \n                                    \n                                        guards:         Guard\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Guard\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlers\n                                    \n                                \n                                \n                                    \n                                        handlers:         HandlersOf\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandlersOf\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providedIn\n                                    \n                                \n                                \n                                    \n                                        providedIn:     Type | \"root\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type | \"root\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\nexport const WITH_CREDENTIALS: unique symbol = Symbol('WITH_CREDENTIALS');\nexport const CLIENT_WITH_CREDENTIALS: unique symbol = Symbol('CLIENT_WITH_CREDENTIALS');\nexport const ON_CLIENT_READY: unique symbol = Symbol('ON_CLIENT_READY');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    };\n    [WITH_CREDENTIALS]: {\n      [CLIENT_WITH_CREDENTIALS]: boolean;\n      [key: string]: boolean;\n    };\n    [ON_CLIENT_READY]: string;\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  withCredentials?: boolean;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuardForbid.html":{"url":"classes/GuardForbid.html","title":"class - GuardForbid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuardForbid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/request-builder.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: HttpRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/rest/src/lib/request-builder.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    HttpRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/rest/src/lib/request-builder.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ClientInstance, HTTP_CLIENT, BASE_URL, GUARDS, ClientConstructor,\n          CLIENT_GUARDS, BODIES, INJECTOR, HANDLERS, CLIENT_HANDLERS, HandlersOf,\n          ERROR_HANDLER, RequestMethod, PARAM_HEADERS, HeadersParam, HeadersInjector,\n          HeadersObject, HEADERS, CLIENT_HEADERS, HeadersClientParam, WITH_CREDENTIALS, CLIENT_WITH_CREDENTIALS } from './types';\nimport { HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { REST_HANDLERS, BASE_HEADERS, BASE_WITH_CREDENTIALS } from './tokens';\n\ntype RestPropertyDecorator = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;\n\nclass GuardForbid extends Error {\n  constructor(\n    public request: HttpRequest\n  ) {\n    super('A guard function forbad the request');\n  }\n}\n\nexport function requestBuilder(type: RequestMethod): (path?: string) => RestPropertyDecorator {\n  return function (path?: string): RestPropertyDecorator {\n    return function (target: ClientConstructor, methodName: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n      descriptor.value = async function(this: ClientInstance, ...args: any[]) {\n        // > Configure full url\n        // _____________________________________________________________________________\n        const url = path !== undefined ? path : methodName;\n\n        // > Configure request body\n        // _____________________________________________________________________________\n        const bodyParamIndex = (target.constructor[BODIES] || {})[methodName];\n        let body: any = null;\n\n        if (typeof bodyParamIndex === 'number') {\n          body = args[bodyParamIndex];\n        }\n\n        // > Configure Headers\n        // _____________________________________________________________________________\n        let headers = new HttpHeaders();\n\n        // >> Base Headers\n        const baseHeaders: HeadersParam[] =  this[INJECTOR].get(BASE_HEADERS);\n\n        for (const set of baseHeaders) {\n          for (const header of set) {\n            let _headers: HeadersObject =  header;\n\n            if (typeof header === 'function') {\n              const instance: HeadersInjector = this[INJECTOR].get(header);\n              _headers = await instance.inject();\n            }\n\n            for (const key of Object.keys(_headers)) {\n              headers = headers.append(key, _headers[key]);\n            }\n          }\n        }\n\n        // >> Client Headers & Method Headers\n        const clientHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[CLIENT_HEADERS] || [];\n        const methodHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[methodName] || [];\n\n        for (let header of [...clientHeaders, ...methodHeaders]) {\n          if (typeof header === 'function') {\n            const instance: HeadersInjector = this[INJECTOR].get(header);\n            header = await instance.inject();\n          }\n\n          if (typeof header === 'string') {\n            header = await this[header]();\n          }\n\n          for (const key of Object.keys(header)) {\n            headers = headers.append(key, header[key]);\n          }\n        }\n\n        // >> Parameter Headers\n        for (const [name, [replace, index]] of Object.entries((target.constructor[PARAM_HEADERS] || {})[methodName] || {})) {\n          const method: 'set' | 'append' = replace ? 'set' : 'append';\n\n          headers = headers[method](name, args[index]);\n        }\n\n        // > With Credentials\n        // _____________________________________________________________________________\n        let withCredentials: boolean =  this[INJECTOR].get(BASE_WITH_CREDENTIALS);\n\n        if (target.constructor[WITH_CREDENTIALS]) {\n          if (typeof target.constructor[WITH_CREDENTIALS][CLIENT_WITH_CREDENTIALS] !== 'undefined') {\n            withCredentials = target.constructor[WITH_CREDENTIALS][CLIENT_WITH_CREDENTIALS];\n          }\n\n          if (typeof target.constructor[WITH_CREDENTIALS][methodName] !== 'undefined') {\n            withCredentials = target.constructor[WITH_CREDENTIALS][methodName];\n          }\n        }\n\n        // > Create request object\n        // _____________________________________________________________________________\n        const request = requestFactory(type as any, `${this[BASE_URL]}/${url}`, { body, headers, withCredentials });\n\n        // > Run guard process\n        // _____________________________________________________________________________\n        try {\n          const guardsResult = await startGuardCheck(target, methodName, request, this);\n          if (!guardsResult) { throw false; }\n\n        } catch (error) {\n          if (error === false) {\n            throw new GuardForbid(request);\n          }\n\n          throw error;\n        }\n\n        // > Handlers\n        // _____________________________________________________________________________\n        const globalHandlers: HandlersOf = (this[INJECTOR].get(REST_HANDLERS)).reduce((prev, next) => [...prev, ...next], []);\n        const clientHandlers: HandlersOf = target.constructor[HANDLERS][CLIENT_HANDLERS];\n        const methodHandlers: HandlersOf = target.constructor[HANDLERS][methodName] || [];\n\n        // > Result\n        // _____________________________________________________________________________\n        return await chainHandlers(\n          [...globalHandlers, ...clientHandlers, ...methodHandlers],\n          this,\n          >>this[HTTP_CLIENT].request(request).toPromise()\n        );\n      };\n\n      return descriptor;\n    };\n  };\n}\n\ninterface RequestConfig {\n  headers: HttpHeaders;\n  withCredentials: boolean;\n}\n\nfunction requestFactory(\n  method: RequestMethod.POST | RequestMethod.PUT | RequestMethod.PATCH,\n  url: string,\n  config: RequestConfig\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod.GET | RequestMethod.DELETE | RequestMethod.HEAD | RequestMethod.JSONP | RequestMethod.OPTIONS,\n  url: string,\n  config: RequestConfig & { body?: T }\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod,\n  url: string,\n  {body, ...rest}: RequestConfig & { body?: T }\n): HttpRequest {\n  switch (method) {\n    case RequestMethod.POST:\n    case RequestMethod.PUT:\n    case RequestMethod.PATCH:\n      return new HttpRequest(method, url, body, rest);\n    default:\n      return new HttpRequest(method, url, rest);\n  }\n}\n\nasync function startGuardCheck(\n  target: ClientConstructor,\n  methodName: string,\n  request: HttpRequest,\n  context: ClientInstance\n): Promise {\n  const allGuards = [...target.constructor[GUARDS][CLIENT_GUARDS], ...(target.constructor[GUARDS][methodName] || [])];\n\n  return await allGuards.reduce((prev, next) => {\n    return prev.then(passed => {\n      if (!passed) {\n        throw false;\n      }\n\n      let result = typeof next === 'function' ? next(request) : (context)[next](request);\n\n      if (result instanceof Observable) {\n        result = result.toPromise();\n      }\n\n      return result;\n    });\n  }, Promise.resolve(true));\n}\n\nfunction chainHandlers(\n  handlers: HandlersOf,\n  context: ClientInstance,\n  source: Promise>\n): Promise {\n  let original: HttpResponse;\n\n  source.then(res => {\n    original = res;\n  }, error => {\n    original = error;\n  });\n\n  return handlers.reduce((prev: PromiseLike, next) => {\n    let handler: Function;\n    let method: 'then' | 'catch';\n\n    if (typeof next === 'string') {\n      method = context[next][ERROR_HANDLER] ? 'catch' : 'then';\n      handler = (context[next]).bind(context);\n    } else if (next.prototype && 'handle' in next.prototype) {\n      const injectable = context[INJECTOR].get(next);\n      method = injectable.handle[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = injectable.handle.bind(injectable);\n    } else {\n      method = next[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = next;\n    }\n\n    return prev[method](res => handler(original, res));\n  }, source);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Handler.html":{"url":"interfaces/Handler.html","title":"interface - Handler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Handler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         HandlerFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandlerFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\nexport const WITH_CREDENTIALS: unique symbol = Symbol('WITH_CREDENTIALS');\nexport const CLIENT_WITH_CREDENTIALS: unique symbol = Symbol('CLIENT_WITH_CREDENTIALS');\nexport const ON_CLIENT_READY: unique symbol = Symbol('ON_CLIENT_READY');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    };\n    [WITH_CREDENTIALS]: {\n      [CLIENT_WITH_CREDENTIALS]: boolean;\n      [key: string]: boolean;\n    };\n    [ON_CLIENT_READY]: string;\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  withCredentials?: boolean;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeadersInjector.html":{"url":"classes/HeadersInjector.html","title":"class - HeadersInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeadersInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                inject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            inject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inject()\n                \n            \n\n\n            \n                \n                    Defined in projects/rest/src/lib/types.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HeaderInjectorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\nexport const WITH_CREDENTIALS: unique symbol = Symbol('WITH_CREDENTIALS');\nexport const CLIENT_WITH_CREDENTIALS: unique symbol = Symbol('CLIENT_WITH_CREDENTIALS');\nexport const ON_CLIENT_READY: unique symbol = Symbol('ON_CLIENT_READY');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    };\n    [WITH_CREDENTIALS]: {\n      [CLIENT_WITH_CREDENTIALS]: boolean;\n      [key: string]: boolean;\n    };\n    [ON_CLIENT_READY]: string;\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  withCredentials?: boolean;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeadersObject.html":{"url":"interfaces/HeadersObject.html","title":"interface - HeadersObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeadersObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | []\n\n                    \n                \n                        \n                            \n                                Defined in projects/rest/src/lib/types.ts:41\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\nexport const WITH_CREDENTIALS: unique symbol = Symbol('WITH_CREDENTIALS');\nexport const CLIENT_WITH_CREDENTIALS: unique symbol = Symbol('CLIENT_WITH_CREDENTIALS');\nexport const ON_CLIENT_READY: unique symbol = Symbol('ON_CLIENT_READY');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    };\n    [WITH_CREDENTIALS]: {\n      [CLIENT_WITH_CREDENTIALS]: boolean;\n      [key: string]: boolean;\n    };\n    [ON_CLIENT_READY]: string;\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  withCredentials?: boolean;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestConfig.html":{"url":"interfaces/RequestConfig.html","title":"interface - RequestConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/request-builder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        headers\n                                \n                                \n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:         HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientInstance, HTTP_CLIENT, BASE_URL, GUARDS, ClientConstructor,\n          CLIENT_GUARDS, BODIES, INJECTOR, HANDLERS, CLIENT_HANDLERS, HandlersOf,\n          ERROR_HANDLER, RequestMethod, PARAM_HEADERS, HeadersParam, HeadersInjector,\n          HeadersObject, HEADERS, CLIENT_HEADERS, HeadersClientParam, WITH_CREDENTIALS, CLIENT_WITH_CREDENTIALS } from './types';\nimport { HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { REST_HANDLERS, BASE_HEADERS, BASE_WITH_CREDENTIALS } from './tokens';\n\ntype RestPropertyDecorator = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;\n\nclass GuardForbid extends Error {\n  constructor(\n    public request: HttpRequest\n  ) {\n    super('A guard function forbad the request');\n  }\n}\n\nexport function requestBuilder(type: RequestMethod): (path?: string) => RestPropertyDecorator {\n  return function (path?: string): RestPropertyDecorator {\n    return function (target: ClientConstructor, methodName: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n      descriptor.value = async function(this: ClientInstance, ...args: any[]) {\n        // > Configure full url\n        // _____________________________________________________________________________\n        const url = path !== undefined ? path : methodName;\n\n        // > Configure request body\n        // _____________________________________________________________________________\n        const bodyParamIndex = (target.constructor[BODIES] || {})[methodName];\n        let body: any = null;\n\n        if (typeof bodyParamIndex === 'number') {\n          body = args[bodyParamIndex];\n        }\n\n        // > Configure Headers\n        // _____________________________________________________________________________\n        let headers = new HttpHeaders();\n\n        // >> Base Headers\n        const baseHeaders: HeadersParam[] =  this[INJECTOR].get(BASE_HEADERS);\n\n        for (const set of baseHeaders) {\n          for (const header of set) {\n            let _headers: HeadersObject =  header;\n\n            if (typeof header === 'function') {\n              const instance: HeadersInjector = this[INJECTOR].get(header);\n              _headers = await instance.inject();\n            }\n\n            for (const key of Object.keys(_headers)) {\n              headers = headers.append(key, _headers[key]);\n            }\n          }\n        }\n\n        // >> Client Headers & Method Headers\n        const clientHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[CLIENT_HEADERS] || [];\n        const methodHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[methodName] || [];\n\n        for (let header of [...clientHeaders, ...methodHeaders]) {\n          if (typeof header === 'function') {\n            const instance: HeadersInjector = this[INJECTOR].get(header);\n            header = await instance.inject();\n          }\n\n          if (typeof header === 'string') {\n            header = await this[header]();\n          }\n\n          for (const key of Object.keys(header)) {\n            headers = headers.append(key, header[key]);\n          }\n        }\n\n        // >> Parameter Headers\n        for (const [name, [replace, index]] of Object.entries((target.constructor[PARAM_HEADERS] || {})[methodName] || {})) {\n          const method: 'set' | 'append' = replace ? 'set' : 'append';\n\n          headers = headers[method](name, args[index]);\n        }\n\n        // > With Credentials\n        // _____________________________________________________________________________\n        let withCredentials: boolean =  this[INJECTOR].get(BASE_WITH_CREDENTIALS);\n\n        if (target.constructor[WITH_CREDENTIALS]) {\n          if (typeof target.constructor[WITH_CREDENTIALS][CLIENT_WITH_CREDENTIALS] !== 'undefined') {\n            withCredentials = target.constructor[WITH_CREDENTIALS][CLIENT_WITH_CREDENTIALS];\n          }\n\n          if (typeof target.constructor[WITH_CREDENTIALS][methodName] !== 'undefined') {\n            withCredentials = target.constructor[WITH_CREDENTIALS][methodName];\n          }\n        }\n\n        // > Create request object\n        // _____________________________________________________________________________\n        const request = requestFactory(type as any, `${this[BASE_URL]}/${url}`, { body, headers, withCredentials });\n\n        // > Run guard process\n        // _____________________________________________________________________________\n        try {\n          const guardsResult = await startGuardCheck(target, methodName, request, this);\n          if (!guardsResult) { throw false; }\n\n        } catch (error) {\n          if (error === false) {\n            throw new GuardForbid(request);\n          }\n\n          throw error;\n        }\n\n        // > Handlers\n        // _____________________________________________________________________________\n        const globalHandlers: HandlersOf = (this[INJECTOR].get(REST_HANDLERS)).reduce((prev, next) => [...prev, ...next], []);\n        const clientHandlers: HandlersOf = target.constructor[HANDLERS][CLIENT_HANDLERS];\n        const methodHandlers: HandlersOf = target.constructor[HANDLERS][methodName] || [];\n\n        // > Result\n        // _____________________________________________________________________________\n        return await chainHandlers(\n          [...globalHandlers, ...clientHandlers, ...methodHandlers],\n          this,\n          >>this[HTTP_CLIENT].request(request).toPromise()\n        );\n      };\n\n      return descriptor;\n    };\n  };\n}\n\ninterface RequestConfig {\n  headers: HttpHeaders;\n  withCredentials: boolean;\n}\n\nfunction requestFactory(\n  method: RequestMethod.POST | RequestMethod.PUT | RequestMethod.PATCH,\n  url: string,\n  config: RequestConfig\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod.GET | RequestMethod.DELETE | RequestMethod.HEAD | RequestMethod.JSONP | RequestMethod.OPTIONS,\n  url: string,\n  config: RequestConfig & { body?: T }\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod,\n  url: string,\n  {body, ...rest}: RequestConfig & { body?: T }\n): HttpRequest {\n  switch (method) {\n    case RequestMethod.POST:\n    case RequestMethod.PUT:\n    case RequestMethod.PATCH:\n      return new HttpRequest(method, url, body, rest);\n    default:\n      return new HttpRequest(method, url, rest);\n  }\n}\n\nasync function startGuardCheck(\n  target: ClientConstructor,\n  methodName: string,\n  request: HttpRequest,\n  context: ClientInstance\n): Promise {\n  const allGuards = [...target.constructor[GUARDS][CLIENT_GUARDS], ...(target.constructor[GUARDS][methodName] || [])];\n\n  return await allGuards.reduce((prev, next) => {\n    return prev.then(passed => {\n      if (!passed) {\n        throw false;\n      }\n\n      let result = typeof next === 'function' ? next(request) : (context)[next](request);\n\n      if (result instanceof Observable) {\n        result = result.toPromise();\n      }\n\n      return result;\n    });\n  }, Promise.resolve(true));\n}\n\nfunction chainHandlers(\n  handlers: HandlersOf,\n  context: ClientInstance,\n  source: Promise>\n): Promise {\n  let original: HttpResponse;\n\n  source.then(res => {\n    original = res;\n  }, error => {\n    original = error;\n  });\n\n  return handlers.reduce((prev: PromiseLike, next) => {\n    let handler: Function;\n    let method: 'then' | 'catch';\n\n    if (typeof next === 'string') {\n      method = context[next][ERROR_HANDLER] ? 'catch' : 'then';\n      handler = (context[next]).bind(context);\n    } else if (next.prototype && 'handle' in next.prototype) {\n      const injectable = context[INJECTOR].get(next);\n      method = injectable.handle[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = injectable.handle.bind(injectable);\n    } else {\n      method = next[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = next;\n    }\n\n    return prev[method](res => handler(original, res));\n  }, source);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RestModule.html":{"url":"modules/RestModule.html","title":"module - RestModule","body":"\n                   \n\n\n\n\n    Modules\n    RestModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/rest/src/lib/rest.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(undefined: RootConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in projects/rest/src/lib/rest.module.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                                RootConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BASE_URL, REST_HANDLERS, BASE_HEADERS, BASE_WITH_CREDENTIALS } from './tokens';\nimport { HandlersOf, HeadersParam, HeadersInjector } from './types';\n\ninterface RootConfiguration {\n  baseUrl?: string;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersParam;\n  withCredentials?: boolean;\n}\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    {provide: BASE_URL, useValue: ''},\n    {provide: REST_HANDLERS, useValue: [], multi: true},\n    {provide: BASE_HEADERS, useValue: [], multi: true},\n    {provide: BASE_WITH_CREDENTIALS, useValue: true}\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class RestModule {\n  public static forRoot({\n    baseUrl = '',\n    handlers = [],\n    baseHeaders = [],\n    withCredentials = true\n  }: RootConfiguration = {} ): ModuleWithProviders {\n    return {\n      ngModule: RestModule,\n      providers: [\n        {provide: BASE_URL, useValue: baseUrl},\n        {provide: REST_HANDLERS, useValue: handlers, multi: true},\n        {provide: BASE_HEADERS, useValue: baseHeaders, multi: true},\n        {provide: BASE_WITH_CREDENTIALS, useValue: withCredentials}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootConfiguration.html":{"url":"interfaces/RootConfiguration.html","title":"interface - RootConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/rest.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseHeaders\n                                \n                                \n                                            Optional\n                                        baseUrl\n                                \n                                \n                                            Optional\n                                        handlers\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHeaders\n                                    \n                                \n                                \n                                    \n                                        baseHeaders:         HeadersParam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HeadersParam\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlers\n                                    \n                                \n                                \n                                    \n                                        handlers:         HandlersOf\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandlersOf\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BASE_URL, REST_HANDLERS, BASE_HEADERS, BASE_WITH_CREDENTIALS } from './tokens';\nimport { HandlersOf, HeadersParam, HeadersInjector } from './types';\n\ninterface RootConfiguration {\n  baseUrl?: string;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersParam;\n  withCredentials?: boolean;\n}\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    {provide: BASE_URL, useValue: ''},\n    {provide: REST_HANDLERS, useValue: [], multi: true},\n    {provide: BASE_HEADERS, useValue: [], multi: true},\n    {provide: BASE_WITH_CREDENTIALS, useValue: true}\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class RestModule {\n  public static forRoot({\n    baseUrl = '',\n    handlers = [],\n    baseHeaders = [],\n    withCredentials = true\n  }: RootConfiguration = {} ): ModuleWithProviders {\n    return {\n      ngModule: RestModule,\n      providers: [\n        {provide: BASE_URL, useValue: baseUrl},\n        {provide: REST_HANDLERS, useValue: handlers, multi: true},\n        {provide: BASE_HEADERS, useValue: baseHeaders, multi: true},\n        {provide: BASE_WITH_CREDENTIALS, useValue: withCredentials}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/rest/src/lib/body.decorator.ts\n            \n            function\n            Body\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/client.decorator.ts\n            \n            function\n            Client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/error-handler.decorator.ts\n            \n            function\n            ErrorHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/guards.decorator.ts\n            \n            function\n            Guards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/handlers.decorator.ts\n            \n            function\n            Handlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/header.decorator.ts\n            \n            function\n            Header\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/headers.decorator.ts\n            \n            function\n            Headers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/on-client-ready.decorator.ts\n            \n            function\n            OnClientReady\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            class\n            GuardForbid\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            interface\n            RequestConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            chainHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            startGuardCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Delete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Head\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Jsonp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Patch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Put\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/rest.module.ts\n            \n            interface\n            RootConfiguration\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            BASE_HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            BASE_WITH_CREDENTIALS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            REST_HANDLERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            class\n            HeadersInjector\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            ClientConstructor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            ClientInstance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            ClientOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            Handler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            HeadersObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            BODIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_GUARDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_HANDLERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_WITH_CREDENTIALS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            ERROR_HANDLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            GUARDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            HANDLERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            HTTP_CLIENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            INJECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            ON_CLIENT_READY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            PARAM_HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            WITH_CREDENTIALS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/with-credentials.decorator.ts\n            \n            function\n            WithCredentials\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.3\n        \n            @angular/common : ~8.2.3\n        \n            @angular/compiler : ~8.2.3\n        \n            @angular/core : ~8.2.3\n        \n            @angular/forms : ~8.2.3\n        \n            @angular/platform-browser : ~8.2.3\n        \n            @angular/platform-browser-dynamic : ~8.2.3\n        \n            @angular/router : ~8.2.3\n        \n            core-js : ^2.5.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequestMethod   (projects/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/types.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestMethod\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 PATCH\n                            \n                        \n                        \n                            \n                                Value : PATCH\n                            \n                        \n                        \n                            \n                                 HEAD\n                            \n                        \n                        \n                            \n                                Value : HEAD\n                            \n                        \n                        \n                            \n                                 OPTIONS\n                            \n                        \n                        \n                            \n                                Value : OPTIONS\n                            \n                        \n                        \n                            \n                                 JSONP\n                            \n                        \n                        \n                            \n                                Value : JSONP\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Body   (projects/.../body.decorator.ts)\n                        \n                        \n                            chainHandlers   (projects/.../request-builder.ts)\n                        \n                        \n                            Client   (projects/.../client.decorator.ts)\n                        \n                        \n                            ErrorHandler   (projects/.../error-handler.decorator.ts)\n                        \n                        \n                            Guards   (projects/.../guards.decorator.ts)\n                        \n                        \n                            Handlers   (projects/.../handlers.decorator.ts)\n                        \n                        \n                            Header   (projects/.../header.decorator.ts)\n                        \n                        \n                            Headers   (projects/.../headers.decorator.ts)\n                        \n                        \n                            OnClientReady   (projects/.../on-client-ready.decorator.ts)\n                        \n                        \n                            requestBuilder   (projects/.../request-builder.ts)\n                        \n                        \n                            requestFactory   (projects/.../request-builder.ts)\n                        \n                        \n                            requestFactory   (projects/.../request-builder.ts)\n                        \n                        \n                            requestFactory   (projects/.../request-builder.ts)\n                        \n                        \n                            startGuardCheck   (projects/.../request-builder.ts)\n                        \n                        \n                            WithCredentials   (projects/.../with-credentials.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/body.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Body\n                        \n                        \n                    \n                \n            \n            \n                \nBody()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     ParameterDecorator\n\n                    \n                \n            \n        \n    \n    projects/rest/src/lib/request-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            chainHandlers\n                        \n                        \n                    \n                \n            \n            \n                \nchainHandlers(handlers, context, source)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handlers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestBuilder\n                        \n                        \n                    \n                \n            \n            \n                \nrequestBuilder(type)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RestPropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrequestFactory(method, url, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrequestFactory(method, url, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrequestFactory(method, url, undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startGuardCheck\n                        \n                        \n                    \n                \n            \n            \n                \nstartGuardCheck(target, methodName, request, context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    methodName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/client.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Client\n                        \n                        \n                    \n                \n            \n            \n                \nClient(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/error-handler.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nErrorHandler()\n                \n            \n\n\n\n\n        \n    \n    projects/rest/src/lib/guards.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Guards\n                        \n                        \n                    \n                \n            \n            \n                \nGuards(guardFunctions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    guardFunctions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/handlers.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Handlers\n                        \n                        \n                    \n                \n            \n            \n                \nHandlers(handlers)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handlers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/header.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Header\n                        \n                        \n                    \n                \n            \n            \n                \nHeader(name, replace)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParameterDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/headers.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Headers\n                        \n                        \n                    \n                \n            \n            \n                \nHeaders(headers)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/on-client-ready.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            OnClientReady\n                        \n                        \n                    \n                \n            \n            \n                \nOnClientReady()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                \n            \n        \n    \n    projects/rest/src/lib/with-credentials.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            WithCredentials\n                        \n                        \n                    \n                \n            \n            \n                \nWithCredentials(withCredentials)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    withCredentials\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n@thalesrc/angular-rest\nAngular Rest Http Module with Typescript Declarative Annotations, Guards, Handlers and more\nThis package is under development. Use in caution!\n\n1. Installation\nyarn add @thalesrc/angular-restor\nnpm install @thalesrc/angular-rest --save\n2. Basic Example\n// app.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { RestModule } from '@thalesrc/angular-rest';\n\nimport { TodoClient } from './todo.client';\nimport { TodoComponent } from './todo.component';\n\n@NgModule({\n  imports: [\n    RestModule.forRoot({baseUrl: 'http://localhost:3000'})\n  ],\n  providers: [\n    TodoClient\n  ],\n  declarations: [\n    TodoComponent\n  ]\n})\nexport class AppModule {}\n// todo.client.ts\n\nimport { HttpRequest } from '@angular/common/http';\nimport { Client, Get, Post, Body } from '@thalesrc/angular-rest';\n\n@Client()\nexport class TodoClient {\n\n  @Get()\n  public todos(): Promise {\n    return null;\n  }\n\n  @Post('todos')\n  public insertTodo(@Body() todo: Todo): Promise {\n    return null;\n  }\n}\n// todo.component.ts\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  template: 'Hello World'\n})\nexport class TodoComponent {\n  constructor(private client: TodoClient) {\n    this.client.todos().then(todos => {\n      // Make something with todos\n    });\n  }\n\n  async postTodo(todo: Todo): Promise {\n    return await this.client.insertTodo(todo);\n  }\n}\n\n3. API Docs\n\n3.1. Client Decorator\n@Client() decorator marks a class as RestClient and provides functionality to make Http calls with its marked methods.\nThis decorator also marks the class as Injectable() and makes it to function as an Angular Service.\nIt can be configured by defining a ClientOptions object as a parameter\n3.1.1. ClientOptions\nA ClientOptions object configures base options for the rest methods declared inside a @Client() class\ninterface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}@Client({\n  baseUrl: 'http://localhost:3000',\n  baseHeaders: [{'Secret-Key': 'The best rest util is @thalesrc/angular-rest'}]\n  ...\n})\nexport class TodoClient {\n  ...\n}\n3.2. Request Method Decorators\nAll of these decorators marks a method in a @Client() as a request builder. path can be specified to define the endpoint path. Otherwise, the method name is going to be used as path.\nThe method return type should be defined as Promise and function should be empty but only returning null. Decorators will handle all the rest.\n\n@Get(path?: string)\n@Post(path?: string)\n@Put(path?: string)\n@Delete(path?: string)\n@Patch(path?: string)\n@Options(path?: string)\n@Head(path?: string)\n@Jsonp(path?: string)\n\nExample:\n@Client()\nexport class TodoClient {\n  @Get()\n  public todos(): Promise {\n    return null;\n  }\n\n  @Post('todos')\n  public postTodo(@Body() todo: Todo): Promise {\n    return null;\n  }\n}\n3.3. Headers\nTo be determined\n3.3.1. Header Declaration Methods\nTo be determined\n3.3.1.1 HeaderInjector\nTo be determined\n3.3.1.2 HeadersObject\nTo be determined\n3.3.1.3 Headers as Client Method\nTo be determined\n3.3.2. Base Headers\nTo be determined\n3.3.3. Client Headers\nTo be determined\n3.3.4. Parameter Headers\nTo be determined\n\n3.4. Guards\nTo be determined\n3.4.1. Guard Declaration Methods\nTo be determined\n3.4.1.1 RestGuard\nTo be developed\n3.4.1.2. Guard Function\nTo be determined\n3.4.1.3. Guard Method\nTo be determined\n3.4.2. Base Guards\nTo be determined\n3.4.3. Client Guards\nTo be determined\n3.4.4. Method Guards\nTo be determined\n\n4.5. Handlers\nTo be determined\n4.5.1 ErrorHandlers\nTo be determined\n4.5.2 Handler Declaration Methods\nTo be determined\n4.5.2.1 Handler\nTo be determined\n4.5.2.2 Handler Function\nTo be determined\n4.5.2.3 Handler Method\nTo be determined\n4.5.3 Base Handlers\nTo be determined\n4.5.4 Client Handlers\nTo be determined\n4.5.5 Method Handlers\nTo be determined\n\n4.6. RestModule\nTo be determined\n\n4.7 OnClientReady Decorator\nIn client constructor functions, calling a rest call is forbidden. Because the client dependencies have not been set yet when the constructor function called.\nTo run some code when client instance created, @OnClientReady() decorator can be used. It will mark a method of a client to be called right after construction.\nExample:\nimport { Client, OnClientReady } from '@thalesrc/angular-rest';\nimport { TodoCacheService } from './todo-cache.service';\n\n@Client()\nexport class TodoClient {\n  constructor(\n    private todoCacheService: TodoCacheService\n  ) {}\n\n  @OnClientReady()\n  private onReady() {\n    const todos = await this.todos();\n\n    this.todoCacheService.cacheTodos(todos);\n  }\n\n  @Get()\n  public todos(): Promise {\n    return null;\n  }\n}\n4.8 WithCredentials Option\nDefines whether a request should be sent with outgoing credentials (cookies). Default true\n4.8.1. As Module Config\nIt can be set in module config as base option. That would configure for all requests unless it is declared especially by other methods.\nExample:\nimport { NgModule } from '@angular/core';\nimport { RestModule } from '@thalesrc/angular-rest';\n\n@NgModule({\n  imports: [\n    RestModule.forRoot({withCredentials: false})\n    ...\n  ],\n})\nexport class AppModule {}4.8.2. As Provider\nIt can be provided with the BASE_WITH_CREDENTIALS token as base option. That would also configure for all requests like As Module Config unless it is declared especially by other methods.\nExample:\nimport { NgModule } from '@angular/core';\nimport { RestModule, BASE_WITH_CREDENTIALS } from '@thalesrc/angular-rest';\n\n@NgModule({\n  imports: [\n    RestModule\n    ...\n  ],\n  providers: [\n    {provide: BASE_WITH_CREDENTIALS, useValue: false},\n    ...\n  ]\n})\nexport class AppModule {}4.8.3. As Client Config\nIt can be set in @Client() decorator as an option. That would configure withCredentials option for all the calls in that client.\nExample:\nimport { Client } from '@thalesrc/angular-rest';\n\n@Client({\n  withCredentials: true\n})\nexport class TodoClient {\n  ...\n}4.8.4. WithCredentials Decorator\nIt can be set by @WithCredentials() decorator on top a rest call. That would configure withCredentials option for only that call.\nExample:\nimport { Client, WithCredentials } from '@thalesrc/angular-rest';\n\n@Client()\nexport class TodoClient {\n  @Get()\n  @WithCredentials(true)\n  public todos(): Promise {\n    return null;\n  }\n}4.8.5. WithCredentialsParam Decorator\nto be developed\n\n4. Aot Limitations\nThis package supports aot builds, however there are some limitations.\n\nThe Injector should have been defined as the first parameter for every @Client constructor.\n\nimport { Injector } from '@angular/core';\n\n@Client()\nexport class TodoClient {\n  constructor(injector: Injector, otherServices: Etc) {\n\n  }\n}\nBase handlers and base headers shouldn't be defined in RestModule.forRoot static method. All of these should be provided in module providers\n\nimport { NgModule } from '@angular/core';\nimport { RestModule, BASE_HEADERS, BASE_HANDLERS } from '@thalesrc/angular-rest';\n\nimport { BaseHeaders, BaseHandler } from './services';\n\n@NgModule({\n  imports: [RestModule],\n  providers: [\n    BaseHeaders,\n    BaseHandler,\n    {provide: BASE_HEADERS, useValue: [BaseHeaders, {'Secret-Key': 'topsecret'}], multi: true},\n    {provide: BASE_HANDLERS, useValue: [BaseHandler], multi: true},\n  ]\n})\nexport class AppModule {}\n5. Contributors\nAli Şahin Özçelik\nThis repository is started as a fork of steven166/angular-rest-client and completely refactored now\n\n6. License\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Thalesrc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        RestModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FunctionsOf   (projects/.../types.ts)\n                        \n                        \n                            Guard   (projects/.../types.ts)\n                        \n                        \n                            GuardFunction   (projects/.../types.ts)\n                        \n                        \n                            GuardFunctionsOf   (projects/.../types.ts)\n                        \n                        \n                            HandlerFunction   (projects/.../types.ts)\n                        \n                        \n                            HandlerFunctionsOf   (projects/.../types.ts)\n                        \n                        \n                            HandlersOf   (projects/.../types.ts)\n                        \n                        \n                            HeaderInjectorResponse   (projects/.../types.ts)\n                        \n                        \n                            HeaderInjectorType   (projects/.../types.ts)\n                        \n                        \n                            HeadersClientParam   (projects/.../types.ts)\n                        \n                        \n                            HeadersParam   (projects/.../types.ts)\n                        \n                        \n                            RestPropertyDecorator   (projects/.../request-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    FunctionsOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guard\n                \n            \n            \n                \n                        Array | GuardFunctionsOf | GuardFunction\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuardFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuardFunctionsOf\n                \n            \n            \n                \n                        FunctionsOf\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandlerFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandlerFunctionsOf\n                \n            \n            \n                \n                            FunctionsOf\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandlersOf\n                \n            \n            \n                \n                            Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeaderInjectorResponse\n                \n            \n            \n                \n                            HeadersObject | Promise\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeaderInjectorType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeadersClientParam\n                \n            \n            \n                \n                            Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeadersParam\n                \n            \n            \n                \n                            Array\n\n                \n            \n        \n    \n    projects/rest/src/lib/request-builder.ts\n    \n    \n        \n            \n                \n                    \n                    RestPropertyDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_HEADERS   (projects/.../tokens.ts)\n                        \n                        \n                            BASE_URL   (projects/.../types.ts)\n                        \n                        \n                            BASE_URL   (projects/.../tokens.ts)\n                        \n                        \n                            BASE_WITH_CREDENTIALS   (projects/.../tokens.ts)\n                        \n                        \n                            BODIES   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_GUARDS   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_HANDLERS   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_HEADERS   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_WITH_CREDENTIALS   (projects/.../types.ts)\n                        \n                        \n                            Delete   (projects/.../request.decorator.ts)\n                        \n                        \n                            ERROR_HANDLER   (projects/.../types.ts)\n                        \n                        \n                            Get   (projects/.../request.decorator.ts)\n                        \n                        \n                            GUARDS   (projects/.../types.ts)\n                        \n                        \n                            HANDLERS   (projects/.../types.ts)\n                        \n                        \n                            Head   (projects/.../request.decorator.ts)\n                        \n                        \n                            HEADERS   (projects/.../types.ts)\n                        \n                        \n                            HTTP_CLIENT   (projects/.../types.ts)\n                        \n                        \n                            INJECTOR   (projects/.../types.ts)\n                        \n                        \n                            Jsonp   (projects/.../request.decorator.ts)\n                        \n                        \n                            ON_CLIENT_READY   (projects/.../types.ts)\n                        \n                        \n                            Options   (projects/.../request.decorator.ts)\n                        \n                        \n                            PARAM_HEADERS   (projects/.../types.ts)\n                        \n                        \n                            Patch   (projects/.../request.decorator.ts)\n                        \n                        \n                            Post   (projects/.../request.decorator.ts)\n                        \n                        \n                            Put   (projects/.../request.decorator.ts)\n                        \n                        \n                            REST_HANDLERS   (projects/.../tokens.ts)\n                        \n                        \n                            WITH_CREDENTIALS   (projects/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('BASE_HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('REST_BASE_URL')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_WITH_CREDENTIALS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('BASE_WITH_CREDENTIALS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REST_HANDLERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('REST_HANDLERS')\n                        \n                    \n\n\n            \n        \n\n    projects/rest/src/lib/types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('BASE_URL')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BODIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('BODIES')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_GUARDS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_GUARDS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_HANDLERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_HANDLERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_WITH_CREDENTIALS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_WITH_CREDENTIALS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ERROR_HANDLER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('ERROR_HANDLER')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GUARDS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('GUARDS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HANDLERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('HANDLERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_CLIENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('HTTP_CLIENT')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('INJECTOR')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ON_CLIENT_READY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('ON_CLIENT_READY')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PARAM_HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('PARAM_HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WITH_CREDENTIALS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('WITH_CREDENTIALS')\n                        \n                    \n\n\n            \n        \n\n    projects/rest/src/lib/request.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.DELETE)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Get\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.GET)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Head\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.HEAD)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Jsonp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.JSONP)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Options\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.OPTIONS)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Patch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.PATCH)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Post\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.POST)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Put\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.PUT)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
