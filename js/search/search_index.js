var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/interfaces/ClientConstructor.html",[0,0.079,1,0.738]],["body/interfaces/ClientConstructor.html",[0,0.125,1,0.869,2,0.793,3,0.607,4,0.528,5,0.528,6,0.607,7,1.323,8,0.994,9,0.387,10,1.29,11,1.267,12,3.308,13,0.61,14,0.052,15,0.755,16,0.962,17,0.607,18,1.47,19,0.869,20,1.134,21,1.47,22,0.528,23,1.257,24,1.767,25,2.292,26,2.012,27,0.902,28,0.869,29,0.902,30,0.65,31,0.902,32,0.759,33,0.902,34,0.869,35,0.902,36,0.869,37,0.902,38,0.542,39,0.902,40,0.869,41,0.902,42,0.607,43,0.902,44,0.869,45,0.902,46,0.65,47,0.902,48,0.869,49,0.902,50,1.028,51,0.695,52,0.869,53,0.994,54,0.755,55,0.994,56,0.994,57,0.869,58,0.994,59,1.444,60,1.47,61,1.028,62,1.134,63,1.028,64,1.028,65,1.028,66,1.74,67,0.607,68,1.47,69,0.881,70,1.29,71,0.869,72,1.81,73,1.507,74,0.793,75,1.028,76,0.902,77,0.828,78,1.014,79,1.323,80,0.755,81,0.65,82,1.435,83,1.165,84,1.507,85,1.47,86,0.325,87,0.65,88,1.028,89,0.902,90,0.528,91,1.107,92,0.695,93,0.607,94,1.134,95,0.695,96,0.695,97,0.528,98,0.902,99,0.902,100,0.902,101,0.021,102,0.03,103,0.021]],["title/interfaces/ClientInstance.html",[0,0.079,93,0.738]],["body/interfaces/ClientInstance.html",[0,0.125,1,0.599,2,0.782,3,0.599,4,0.521,5,0.521,6,0.599,7,1.123,8,0.686,9,0.382,10,1.278,11,0.686,13,0.609,14,0.052,15,0.748,16,1.131,17,0.599,18,1.861,19,0.86,20,1.123,21,1.456,22,0.521,23,1.256,24,1.763,25,2.286,26,2.007,27,0.89,28,1.165,29,0.89,30,0.872,31,0.89,32,0.753,33,0.89,34,0.86,35,0.89,36,0.86,37,0.89,38,0.538,39,0.89,40,0.86,41,0.89,42,0.599,43,0.89,44,0.86,45,0.89,46,0.644,47,0.89,48,0.86,49,0.89,50,1.014,51,0.686,52,0.86,53,0.985,54,0.748,55,0.985,56,0.985,57,0.86,58,0.985,59,1.436,60,1.456,61,1.014,62,1.123,63,1.014,64,1.014,65,1.014,66,1.731,67,0.599,68,1.456,69,0.875,70,1.278,71,0.86,72,1.801,73,1.495,74,0.782,75,1.014,76,0.89,77,0.823,78,1.007,79,1.314,80,0.748,81,0.644,82,1.43,83,1.184,84,1.495,85,1.456,86,0.32,87,0.644,88,1.014,89,0.89,90,0.521,91,1.1,92,0.686,93,0.86,94,1.123,95,0.686,96,0.686,97,0.521,98,0.89,99,0.89,100,0.89,101,0.021,102,0.03,103,0.021]],["title/interfaces/ClientOptions.html",[0,0.079,95,0.845]],["body/interfaces/ClientOptions.html",[0,0.122,1,0.571,2,0.745,3,0.571,4,0.496,5,0.496,6,0.571,7,1.085,8,0.654,9,0.364,10,1.235,11,0.654,13,0.619,14,0.052,15,0.722,16,0.935,17,0.571,18,1.406,19,0.831,20,1.085,21,1.406,22,0.496,23,1.25,24,1.747,25,2.265,26,1.989,27,0.849,28,0.831,29,0.849,30,0.622,31,0.849,32,0.893,33,0.849,34,0.831,35,0.849,36,0.831,37,0.849,38,0.637,39,0.849,40,0.831,41,0.849,42,0.571,43,0.849,44,0.831,45,0.849,46,0.622,47,0.849,48,0.831,49,0.849,50,0.966,51,0.654,52,0.831,53,0.951,54,0.722,55,0.951,56,0.951,57,0.831,58,0.951,59,1.557,60,1.406,61,0.966,62,1.085,63,0.966,64,0.966,65,0.966,66,1.698,67,0.571,68,1.406,69,0.851,70,1.235,71,1.076,72,1.772,73,1.455,74,0.745,75,0.966,76,0.849,77,0.893,78,0.98,79,1.278,80,0.722,81,0.622,82,1.409,83,1.174,84,1.455,85,1.406,86,0.305,87,0.622,88,0.966,89,0.849,90,0.496,91,1.193,92,0.654,93,0.571,94,1.085,95,0.951,96,1.231,97,0.935,98,1.598,99,1.455,100,1.598,101,0.02,102,0.029,103,0.02,104,2.588]],["title/classes/GuardForbid.html",[86,0.394,105,1.64]],["body/classes/GuardForbid.html",[0,0.046,1,0.82,3,0.426,4,0.713,5,0.37,7,0.87,8,0.488,9,0.425,10,0.99,11,0.763,13,0.359,14,0.052,15,0.806,16,0.37,19,1.186,20,0.87,22,0.37,23,0.37,24,1.772,28,0.426,30,0.319,32,0.319,34,0.426,36,0.426,38,0.438,40,0.426,42,0.426,44,0.426,46,0.94,48,0.667,51,0.939,54,0.37,62,0.87,67,1.213,69,0.713,71,0.667,74,1.071,77,0.753,78,0.928,79,0.556,80,0.806,81,0.499,82,0.763,83,1.053,86,0.228,87,0.614,90,0.579,91,0.82,92,0.488,93,0.928,94,0.556,97,0.579,101,0.037,102,0.023,103,0.015,104,0.824,105,1.481,106,1.102,107,1.586,108,0.824,109,3.423,110,1.586,111,1.624,112,1.288,113,1.624,114,1.102,115,1.288,116,1.624,117,0.948,118,2.519,119,2.046,120,1.102,121,0.722,122,0.633,123,0.948,124,1.823,125,2.121,126,1.309,127,2.519,128,2.398,129,1.309,130,2.46,131,1.309,132,1.102,133,2.398,134,2.388,135,2.882,136,1.309,137,1.723,138,1.309,139,2.519,140,1.309,141,2.882,142,3.423,143,1.309,144,2.23,145,2.046,146,1.309,147,1.102,148,3.276,149,1.309,150,1.102,151,1.309,152,2.848,153,2.23,154,2.046,155,2.046,156,2.046,157,2.758,158,2.046,159,1.309,160,2.046,161,1.309,162,0.824,163,2.695,164,2.046,165,2.046,166,2.046,167,1.309,168,1.309,169,1.309,170,1.102,171,1.723,172,1.309,173,2.046,174,1.309,175,1.309,176,1.309,177,1.309,178,1.309,179,1.309,180,1.309,181,1.309,182,2.046,183,1.102,184,2.848,185,2.519,186,3.09,187,1.309,188,2.046,189,1.309,190,3.423,191,1.309,192,2.046,193,1.309,194,2.046,195,1.309,196,1.481,197,1.309,198,2.061,199,1.823,200,2.046,201,2.046,202,2.046,203,2.602,204,1.309,205,1.309,206,1.309,207,1.309,208,1.309,209,1.309,210,2.519,211,2.046,212,2.046,213,0.948,214,0.948,215,1.723,216,1.309,217,1.309,218,1.309,219,1.309,220,1.309,221,1.309,222,1.309,223,1.309,224,1.309,225,1.309,226,1.309,227,1.309,228,2.046,229,1.309,230,1.309,231,1.309,232,1.309,233,2.046,234,1.102,235,1.309,236,1.309,237,1.309,238,1.309,239,1.309,240,1.309]],["title/interfaces/Handler.html",[0,0.079,80,0.641]],["body/interfaces/Handler.html",[0,0.125,1,0.611,2,0.797,3,0.611,4,0.531,5,0.531,6,0.611,7,1.138,8,0.699,9,0.389,10,1.295,11,0.699,13,0.604,14,0.052,15,0.758,16,0.964,17,0.611,18,1.476,19,0.872,20,1.138,21,1.476,22,0.531,23,1.258,24,1.769,25,2.294,26,2.014,27,0.907,28,0.872,29,0.907,30,0.653,31,0.907,32,0.761,33,0.907,34,0.872,35,0.907,36,0.872,37,0.907,38,0.544,39,0.907,40,0.872,41,0.907,42,0.611,43,0.907,44,0.872,45,0.907,46,0.653,47,0.907,48,0.872,49,0.907,50,1.033,51,0.699,52,0.872,53,0.998,54,0.758,55,0.998,56,0.998,57,0.872,58,0.998,59,1.448,60,1.476,61,1.033,62,1.138,63,1.033,64,1.033,65,1.033,66,1.743,67,0.611,68,1.476,69,0.884,70,1.295,71,0.872,72,1.813,73,1.743,74,0.797,75,1.033,76,0.907,77,0.831,78,1.017,79,1.327,80,0.884,81,0.653,82,1.438,83,1.166,84,1.511,85,1.476,86,0.326,87,0.653,88,1.033,89,0.907,90,0.531,91,1.11,92,1.27,93,0.611,94,1.138,95,0.699,96,0.699,97,0.531,98,0.907,99,0.907,100,0.907,101,0.021,102,0.03,103,0.021]],["title/classes/HeadersInjector.html",[86,0.394,87,0.552]],["body/classes/HeadersInjector.html",[0,0.125,1,0.608,3,0.608,4,0.528,5,0.528,6,0.608,7,1.135,8,0.696,9,0.388,11,0.696,13,0.599,14,0.052,15,0.755,16,0.962,17,0.608,18,1.471,19,0.87,20,1.135,21,1.471,22,0.528,23,1.257,24,1.768,25,2.292,26,2.012,27,0.903,28,0.87,29,0.903,30,0.651,31,0.903,32,0.76,33,0.903,34,0.87,35,0.903,36,0.87,37,0.903,38,0.542,39,0.903,40,0.87,41,0.903,42,0.608,43,0.903,44,0.87,45,0.903,46,0.651,47,0.903,48,0.87,49,0.903,50,1.029,51,0.696,52,0.87,53,0.995,54,0.755,55,0.995,56,0.995,57,0.87,58,0.995,59,1.445,60,1.471,61,1.029,62,1.135,63,1.029,64,1.029,65,1.029,66,1.741,67,0.608,68,1.471,69,0.882,70,1.292,71,0.87,72,1.81,73,1.508,74,0.794,75,1.029,76,0.903,77,0.829,78,1.015,79,1.324,80,0.755,81,0.651,82,1.436,83,1.165,84,1.645,85,1.874,86,0.325,87,0.76,88,1.874,89,0.903,90,0.528,91,1.108,92,0.696,93,0.608,94,1.135,95,0.696,96,0.696,97,0.528,98,0.903,99,0.903,100,0.903,101,0.021,102,0.03,103,0.021,106,1.572,112,1.176,241,2.248,242,2.316,243,1.572]],["title/interfaces/HeadersObject.html",[0,0.079,81,0.552]],["body/interfaces/HeadersObject.html",[0,0.126,1,0.612,2,0.799,3,0.612,4,0.532,5,0.532,6,0.612,7,1.14,8,0.701,11,0.701,13,0.599,14,0.052,15,0.759,16,0.965,17,0.612,18,1.478,19,0.874,20,1.14,21,1.478,22,0.532,23,1.258,24,1.77,25,2.295,26,2.015,27,0.91,28,0.874,29,0.91,30,0.654,31,0.91,32,0.763,33,0.91,34,0.874,35,0.91,36,0.874,37,0.91,38,0.544,39,0.91,40,0.874,41,0.91,42,0.612,43,0.91,44,0.874,45,0.91,46,0.654,47,0.91,48,0.874,49,0.91,50,1.036,51,0.701,52,0.874,53,1,54,0.759,55,1,56,1,57,0.874,58,1,59,1.45,60,1.478,61,1.036,62,1.14,63,1.036,64,1.036,65,1.036,66,1.745,67,0.612,68,1.478,69,0.885,70,1.298,71,0.874,72,1.814,73,1.513,74,0.799,75,1.036,76,0.91,77,0.832,78,1.019,79,1.329,80,0.759,81,0.763,82,1.471,83,1.189,84,1.513,85,1.478,86,0.327,87,0.654,88,1.036,89,0.91,90,0.532,91,1.111,92,0.701,93,0.612,94,1.14,95,0.701,96,0.701,97,0.532,98,0.91,99,0.91,100,0.91,101,0.021,102,0.03,103,0.021,112,1.184,244,2.331,245,2.331]],["title/interfaces/RequestConfig.html",[0,0.079,198,1.64]],["body/interfaces/RequestConfig.html",[0,0.046,1,0.83,2,0.566,3,0.434,4,0.721,5,0.377,7,0.566,8,0.496,9,0.431,10,1.003,11,0.496,13,0.296,14,0.052,15,0.813,16,0.377,19,1.075,20,0.881,22,0.377,23,0.377,24,1.777,28,0.434,30,0.325,32,0.325,34,0.434,36,0.434,38,0.443,40,0.434,42,0.434,44,0.434,46,0.977,48,0.676,51,0.949,54,0.377,62,0.881,67,1.122,69,0.721,71,0.676,74,1.082,77,0.759,78,0.936,79,0.566,80,0.813,81,0.506,82,0.773,83,1.059,86,0.232,87,0.621,90,0.587,91,0.83,92,0.496,93,0.936,94,0.566,97,0.587,101,0.037,102,0.023,103,0.015,105,0.964,107,0.839,108,0.839,109,3.299,110,0.839,115,0.839,117,0.964,118,3.115,119,2.074,120,1.121,121,0.734,122,0.644,123,0.964,124,1.844,125,2.144,126,1.332,127,2.547,128,2.42,129,1.332,130,2.47,131,1.332,132,1.121,133,2.42,134,2.399,135,2.9,136,1.332,137,1.746,138,1.332,139,2.547,140,1.332,141,2.9,142,3.445,143,1.332,144,2.243,145,2.074,146,1.332,147,1.121,148,3.299,149,1.332,150,1.121,151,1.332,152,2.875,153,2.243,154,2.074,155,2.074,156,2.074,157,2.778,158,2.074,159,1.332,160,2.074,161,1.332,162,0.839,163,2.708,164,2.074,165,2.074,166,2.074,167,1.332,168,1.332,169,1.332,170,1.121,171,1.746,172,1.332,173,2.074,174,1.332,175,1.332,176,1.332,177,1.332,178,1.332,179,1.332,180,1.332,181,1.332,182,2.074,183,1.121,184,2.875,185,2.547,186,3.115,187,1.332,188,2.074,189,1.332,190,3.445,191,1.332,192,2.074,193,1.332,194,2.074,195,1.332,196,1.501,197,1.332,198,2.255,199,1.844,200,2.074,201,2.074,202,2.074,203,2.623,204,1.332,205,1.332,206,1.332,207,1.332,208,1.332,209,1.332,210,2.547,211,2.074,212,2.074,213,0.964,214,0.964,215,1.746,216,1.332,217,1.332,218,1.332,219,1.332,220,1.332,221,1.332,222,1.332,223,1.332,224,1.332,225,1.332,226,1.332,227,1.332,228,2.074,229,1.332,230,1.332,231,1.332,232,1.332,233,2.074,234,1.121,235,1.332,236,1.332,237,1.332,238,1.332,239,1.332,240,1.332]],["title/modules/RestModule.html",[246,1.908,247,1.427]],["body/modules/RestModule.html",[0,0.091,3,0.853,4,0.741,5,0.741,13,0.374,14,0.052,15,1.107,17,0.853,22,0.741,23,0.741,30,0.904,38,0.645,77,0.819,83,0.741,86,0.456,87,0.639,90,0.951,96,1.382,97,1.049,101,0.03,102,0.038,103,0.03,104,1.649,110,1.649,112,1.649,114,2.206,115,1.649,117,1.897,121,2.044,122,1.794,123,1.897,134,1.649,213,1.897,241,2.206,243,2.206,247,2.335,248,2.206,249,2.206,250,2.829,251,3.36,252,3.249,253,2.832,254,3.249,255,2.206,256,3.709,257,3.123,258,2.62,259,3.709,260,2.206,261,2.432,262,3.485,263,3.485,264,3.294,265,3.294,266,2.206]],["title/interfaces/RootConfiguration.html",[0,0.079,253,1.64]],["body/interfaces/RootConfiguration.html",[0,0.089,2,1.091,3,0.836,4,0.726,5,0.726,9,0.533,10,1.604,13,0.524,14,0.052,15,1.098,17,0.836,22,0.726,23,0.726,30,0.895,38,0.716,77,0.946,83,1.039,86,0.447,87,0.626,90,1.098,96,1.534,97,1.165,101,0.029,102,0.038,103,0.029,104,2.592,110,1.616,117,1.858,121,2.024,122,1.777,123,1.858,134,1.616,247,2.087,249,2.161,250,2.161,251,2.567,253,2.659,256,3.316,257,3.092,258,2.567,259,3.673,260,2.161,261,2.4,262,3.466,263,3.466,264,3.268,265,3.268,266,2.161]],["title/coverage.html",[267,3.054]],["body/coverage.html",[0,0.138,1,0.666,5,0.578,6,1.423,13,0.292,14,0.052,16,0.578,28,0.666,30,0.694,32,0.694,34,0.666,36,0.666,38,0.495,40,0.666,42,0.666,44,0.666,46,0.694,48,0.666,52,0.666,53,0.762,54,0.578,55,0.762,56,0.762,57,0.666,58,0.762,78,0.666,80,0.578,81,0.498,86,0.495,87,0.498,93,0.666,95,0.762,101,0.023,102,0.032,103,0.023,105,1.479,107,2.538,108,2.538,121,1.126,122,0.989,130,2.681,144,1.287,153,1.287,162,1.287,196,1.479,198,1.479,199,2.369,214,1.479,249,1.721,253,1.479,267,2.044,268,2.044,269,2.534,270,2.534,271,2.044,272,5.644,273,5.61,274,2.044,275,2.044,276,2.044,277,2.044,278,2.044,279,2.044,280,2.044,281,2.044,282,2.534,283,4.389,284,2.044,285,4.032,286,5.497,287,3.529,288,3.274,289,2.534,290,2.534,291,2.534]],["title/dependencies.html",[292,1.912,293,2.286]],["body/dependencies.html",[14,0.051,17,1.043,101,0.036,102,0.043,103,0.036,120,2.696,293,2.696,294,3.97,295,5.489,296,3.97,297,3.97,298,3.97,299,4.716,300,4.716,301,3.97,302,3.97,303,3.97,304,3.97,305,3.97,306,3.97,307,3.97,308,3.97,309,3.97,310,3.97,311,3.97]],["title/miscellaneous/enumerations.html",[312,0.813,313,2.715]],["body/miscellaneous/enumerations.html",[6,1.055,9,0.672,14,0.051,51,1.427,52,1.247,53,1.427,54,1.083,55,1.427,56,1.427,57,1.247,58,1.427,101,0.037,102,0.043,103,0.037,255,3.734,312,1.377,313,3.239,314,2.727]],["title/miscellaneous/functions.html",[312,0.813,315,2.715]],["body/miscellaneous/functions.html",[4,0.901,9,0.501,13,0.345,14,0.051,19,1.161,32,0.777,38,0.66,46,0.869,67,1.038,69,0.901,101,0.027,102,0.036,103,0.027,104,2.716,107,1.52,108,2.599,114,3.632,115,2.734,124,1.748,125,2.033,128,3.002,132,2.033,135,2.682,141,3.408,144,2.245,153,2.006,162,2.006,163,2.581,171,2.682,183,2.033,196,2.306,199,2.93,203,3.408,214,2.306,215,3.192,243,3.632,271,2.415,274,2.415,275,2.415,276,3.186,277,3.566,278,2.415,279,2.415,280,2.415,281,2.415,284,3.186,312,1.026,315,2.415,316,2.994,317,4.048,318,2.994,319,2.994,320,2.994,321,2.994,322,2.994,323,2.994,324,3.951,325,2.994,326,4.422,327,2.994,328,2.994,329,2.994,330,2.994,331,2.994,332,2.994]],["title/index.html",[9,0.397,333,1.912,334,1.61]],["body/index.html",[0,0.053,8,0.86,11,0.571,13,0.329,14,0.052,15,1.116,16,0.786,17,1.007,19,0.499,22,0.433,23,1.024,32,0.85,38,0.63,46,0.85,52,0.499,57,0.499,59,0.651,67,0.751,69,0.986,71,1.007,77,0.373,80,0.875,81,0.373,82,0.86,83,1.078,86,0.676,91,0.499,92,0.571,95,1.152,96,0.86,97,0.938,98,0.741,99,0.741,100,0.741,101,0.017,102,0.026,103,0.017,110,1.946,112,1.748,115,0.964,122,1.116,130,1.946,133,2.338,134,2.195,137,1.289,144,0.964,147,2.792,150,2.935,153,0.964,157,1.289,162,2.612,163,2.855,170,2.338,234,1.289,241,2.792,246,1.943,247,1.946,250,1.289,257,2.603,260,1.943,261,2.01,262,1.943,263,1.943,264,1.943,265,1.943,292,2.307,334,1.289,335,4.487,336,4.891,337,2.861,338,2.861,339,1.898,340,1.898,341,1.898,342,1.898,343,1.898,344,1.898,345,1.531,346,1.898,347,1.531,348,1.898,349,1.898,350,1.898,351,1.898,352,1.898,353,1.898,354,1.898,355,1.531,356,1.898,357,2.861,358,1.898,359,4.487,360,1.898,361,3.443,362,1.898,363,1.898,364,2.861,365,1.531,366,2.861,367,1.898,368,3.443,369,2.861,370,1.898,371,4.323,372,1.898,373,2.861,374,1.898,375,1.898,376,1.898,377,1.898,378,1.898,379,1.898,380,1.898,381,2.861,382,1.898,383,1.898,384,1.898,385,1.898,386,1.898,387,1.898,388,1.898,389,3.443,390,3.443,391,1.898,392,1.898,393,1.898,394,1.898,395,1.898,396,1.898,397,1.898,398,1.898,399,1.898,400,1.898,401,1.898,402,1.898,403,1.898,404,2.861,405,1.898,406,1.898,407,1.898,408,3.443,409,1.898,410,1.898,411,1.898,412,1.898,413,1.531,414,1.898,415,1.898,416,1.898,417,1.898,418,1.898,419,1.898,420,1.898,421,1.898,422,1.898,423,1.898,424,1.898,425,1.898,426,1.898,427,1.898,428,5.38,429,1.898,430,3.443,431,1.898,432,1.898,433,1.898,434,1.898,435,1.898,436,1.898,437,1.898,438,1.898,439,1.898,440,1.898,441,1.898,442,1.898,443,1.898,444,1.898,445,1.898,446,1.898,447,1.898,448,1.898,449,1.898,450,1.898,451,1.898,452,1.898,453,1.898,454,1.898,455,1.898,456,1.898,457,1.898,458,1.898,459,1.898,460,1.898,461,1.898,462,2.861,463,2.861,464,1.898,465,1.898,466,1.898,467,1.898,468,1.898,469,1.898,470,1.898,471,1.898,472,1.531,473,2.861,474,3.443,475,1.898,476,1.898,477,1.898,478,1.898,479,1.898,480,1.898,481,1.898,482,1.898,483,1.898,484,1.898,485,1.898,486,1.898,487,1.898,488,1.898,489,1.289,490,1.531]],["title/license.html",[333,1.912,334,1.61,489,1.61]],["body/license.html",[14,0.04,101,0.032,102,0.04,103,0.032,268,2.87,345,3.559,413,2.87,472,2.87,489,2.416,490,2.87,491,4.796,492,3.559,493,3.559,494,3.559,495,4.413,496,3.559,497,3.559,498,3.559,499,3.559,500,3.559,501,3.559,502,4.413,503,5.425,504,3.559,505,3.559,506,3.559,507,4.796,508,3.559,509,4.413,510,3.559,511,3.559,512,3.559,513,3.559,514,3.559,515,3.559,516,3.559,517,3.559,518,3.559,519,4.413,520,3.559,521,3.559,522,3.559,523,3.559,524,3.559,525,3.559,526,3.559,527,4.413,528,4.413,529,3.559,530,3.559,531,3.559,532,3.559,533,3.559,534,3.559,535,3.559,536,3.559,537,3.559,538,3.559,539,3.559,540,3.559,541,3.559,542,3.559,543,3.559,544,3.559,545,3.559,546,3.559,547,3.559,548,3.559,549,3.559,550,3.559,551,3.559,552,3.559,553,3.559,554,3.559,555,2.87,556,3.559,557,3.559]],["title/modules.html",[248,2.571]],["body/modules.html",[14,0.045,101,0.04,102,0.045,103,0.04,247,2.204,248,2.948,558,4.342,559,4.342,560,4.342]],["title/overview.html",[561,3.054]],["body/overview.html",[2,1.441,14,0.045,101,0.038,102,0.045,103,0.038,106,2.854,246,3.311,261,2.454,266,2.854,293,2.854,347,3.39,355,3.39,365,3.39,555,3.39,561,3.39,562,4.204,563,4.204,564,4.877,565,4.204,566,4.204]],["title/miscellaneous/typealiases.html",[312,0.813,567,3.367]],["body/miscellaneous/typealiases.html",[6,1.001,9,0.638,13,0.439,14,0.048,59,1.76,66,1.929,69,0.87,70,1.929,71,1.209,72,2.003,73,1.795,76,1.795,77,0.905,81,0.749,84,1.795,89,1.795,90,1.05,91,1.209,101,0.035,102,0.042,103,0.035,107,1.935,108,2.336,124,2.686,130,2.51,312,1.306,314,3.763,317,3.074,568,3.812]],["title/miscellaneous/variables.html",[312,0.813,569,2.715]],["body/miscellaneous/variables.html",[6,0.759,9,0.484,13,0.616,14,0.052,16,0.88,26,2.089,27,1.127,28,1.013,29,1.127,30,0.911,31,1.127,32,0.758,33,1.127,34,1.013,35,1.127,36,1.013,37,1.127,38,0.541,39,1.127,40,1.013,41,1.127,42,1.013,43,1.127,44,1.013,45,1.127,46,0.758,47,1.127,48,1.013,49,1.127,52,1.013,53,1.159,54,0.88,55,1.159,56,1.159,57,1.013,58,1.159,78,1.141,101,0.026,102,0.035,103,0.026,121,1.714,122,1.505,213,3.246,255,3.776,285,2.329,288,2.329,312,0.99,314,3.636,569,2.329,570,4.343,571,5.155,572,2.888,573,2.888,574,2.888,575,2.888,576,2.888,577,2.888,578,2.888,579,2.888,580,2.888,581,2.888,582,2.888]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":347,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2",{"_index":355,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.5.4",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["2018",{"_index":493,"title":{},"body":{"license.html":{}}}],["3",{"_index":385,"title":{},"body":{"index.html":{}}}],["3.1",{"_index":388,"title":{},"body":{"index.html":{}}}],["3.1.1",{"_index":400,"title":{},"body":{"index.html":{}}}],["3.2",{"_index":407,"title":{},"body":{"index.html":{}}}],["3.3",{"_index":427,"title":{},"body":{"index.html":{}}}],["3.3.1",{"_index":429,"title":{},"body":{"index.html":{}}}],["3.3.1.1",{"_index":431,"title":{},"body":{"index.html":{}}}],["3.3.1.2",{"_index":433,"title":{},"body":{"index.html":{}}}],["3.3.1.3",{"_index":434,"title":{},"body":{"index.html":{}}}],["3.3.2",{"_index":435,"title":{},"body":{"index.html":{}}}],["3.3.3",{"_index":436,"title":{},"body":{"index.html":{}}}],["3.3.4",{"_index":437,"title":{},"body":{"index.html":{}}}],["3.4",{"_index":438,"title":{},"body":{"index.html":{}}}],["3.4.1",{"_index":439,"title":{},"body":{"index.html":{}}}],["3.4.1.1",{"_index":440,"title":{},"body":{"index.html":{}}}],["3.4.1.2",{"_index":443,"title":{},"body":{"index.html":{}}}],["3.4.1.3",{"_index":444,"title":{},"body":{"index.html":{}}}],["3.4.2",{"_index":445,"title":{},"body":{"index.html":{}}}],["3.4.3",{"_index":446,"title":{},"body":{"index.html":{}}}],["3.4.4",{"_index":447,"title":{},"body":{"index.html":{}}}],["4",{"_index":461,"title":{},"body":{"index.html":{}}}],["4.5",{"_index":448,"title":{},"body":{"index.html":{}}}],["4.5.1",{"_index":449,"title":{},"body":{"index.html":{}}}],["4.5.2",{"_index":451,"title":{},"body":{"index.html":{}}}],["4.5.2.1",{"_index":452,"title":{},"body":{"index.html":{}}}],["4.5.2.2",{"_index":453,"title":{},"body":{"index.html":{}}}],["4.5.2.3",{"_index":454,"title":{},"body":{"index.html":{}}}],["4.5.3",{"_index":455,"title":{},"body":{"index.html":{}}}],["4.5.4",{"_index":456,"title":{},"body":{"index.html":{}}}],["4.5.5",{"_index":457,"title":{},"body":{"index.html":{}}}],["4.6",{"_index":458,"title":{},"body":{"index.html":{}}}],["4.7",{"_index":459,"title":{},"body":{"index.html":{}}}],["5",{"_index":477,"title":{},"body":{"index.html":{}}}],["6",{"_index":488,"title":{},"body":{"index.html":{}}}],["6.5.2",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":566,"title":{},"body":{"overview.html":{}}}],["8.2.3",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["_____________________________________________________________________________",{"_index":142,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["_headers",{"_index":154,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["_headers[key",{"_index":161,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["above",{"_index":526,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":85,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["action",{"_index":551,"title":{},"body":{"license.html":{}}}],["add",{"_index":350,"title":{},"body":{"index.html":{}}}],["ahin",{"_index":480,"title":{},"body":{"index.html":{}}}],["ali",{"_index":479,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":568,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allguards",{"_index":216,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["allguards.reduce((prev",{"_index":219,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["and/or",{"_index":517,"title":{},"body":{"license.html":{}}}],["angular",{"_index":337,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":22,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["angular/compiler",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":17,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":341,"title":{},"body":{"index.html":{}}}],["aot",{"_index":462,"title":{},"body":{"index.html":{}}}],["api",{"_index":386,"title":{},"body":{"index.html":{}}}],["app",{"_index":375,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":358,"title":{},"body":{"index.html":{}}}],["append",{"_index":173,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["appmodule",{"_index":366,"title":{},"body":{"index.html":{}}}],["args",{"_index":79,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["args[bodyparamindex",{"_index":149,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["args[index",{"_index":175,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["arising",{"_index":554,"title":{},"body":{"license.html":{}}}],["array",{"_index":72,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["associated",{"_index":504,"title":{},"body":{"license.html":{}}}],["async",{"_index":137,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["authors",{"_index":544,"title":{},"body":{"license.html":{}}}],["available",{"_index":559,"title":{},"body":{"modules.html":{}}}],["await",{"_index":157,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["base",{"_index":150,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["base_handlers",{"_index":473,"title":{},"body":{"index.html":{}}}],["base_headers",{"_index":122,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["base_url",{"_index":30,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basehandler",{"_index":474,"title":{},"body":{"index.html":{}}}],["baseheaders",{"_index":97,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["baseurl",{"_index":96,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["basic",{"_index":356,"title":{},"body":{"index.html":{}}}],["best",{"_index":405,"title":{},"body":{"index.html":{}}}],["bodies",{"_index":36,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":144,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["bodyparamindex",{"_index":145,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["boolean",{"_index":68,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["bootstrap",{"_index":563,"title":{},"body":{"overview.html":{}}}],["browse",{"_index":560,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":300,"title":{},"body":{"dependencies.html":{}}}],["builder",{"_index":409,"title":{},"body":{"index.html":{}}}],["builder.ts",{"_index":108,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["builder.ts:11",{"_index":113,"title":{},"body":{"classes/GuardForbid.html":{}}}],["builder.ts:13",{"_index":116,"title":{},"body":{"classes/GuardForbid.html":{}}}],["builds",{"_index":465,"title":{},"body":{"index.html":{}}}],["c",{"_index":492,"title":{},"body":{"license.html":{}}}],["calls",{"_index":394,"title":{},"body":{"index.html":{}}}],["case",{"_index":210,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["catch",{"_index":186,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["caution",{"_index":346,"title":{},"body":{"index.html":{}}}],["chainhandlers",{"_index":196,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["chainhandlers(handlers",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charge",{"_index":499,"title":{},"body":{"license.html":{}}}],["claim",{"_index":547,"title":{},"body":{"license.html":{}}}],["class",{"_index":86,"title":{"classes/GuardForbid.html":{},"classes/HeadersInjector.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":106,"title":{},"body":{"classes/GuardForbid.html":{},"classes/HeadersInjector.html":{},"overview.html":{}}}],["client",{"_index":162,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["client(undefined",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["client_guards",{"_index":34,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client_handlers",{"_index":40,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["client_headers",{"_index":48,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientconstructor",{"_index":1,"title":{"interfaces/ClientConstructor.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["clienthandlers",{"_index":192,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["clientheaders",{"_index":164,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["clientinstance",{"_index":93,"title":{"interfaces/ClientInstance.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["clientoptions",{"_index":95,"title":{"interfaces/ClientOptions.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"index.html":{}}}],["completely",{"_index":485,"title":{},"body":{"index.html":{}}}],["component",{"_index":373,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":525,"title":{},"body":{"license.html":{}}}],["config",{"_index":203,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["config.body",{"_index":211,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["configure",{"_index":139,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["configured",{"_index":398,"title":{},"body":{"index.html":{}}}],["configures",{"_index":401,"title":{},"body":{"index.html":{}}}],["connection",{"_index":556,"title":{},"body":{"license.html":{}}}],["const",{"_index":24,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["constructor",{"_index":11,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["constructor(injector",{"_index":467,"title":{},"body":{"index.html":{}}}],["constructor(private",{"_index":379,"title":{},"body":{"index.html":{}}}],["constructor(request",{"_index":111,"title":{},"body":{"classes/GuardForbid.html":{}}}],["context",{"_index":215,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["context)[next](request",{"_index":223,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["context[injector].get(next",{"_index":235,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["context[next]).bind(context",{"_index":232,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["context[next][error_handler",{"_index":231,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["contract",{"_index":552,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":478,"title":{},"body":{"index.html":{}}}],["copies",{"_index":519,"title":{},"body":{"license.html":{}}}],["copy",{"_index":502,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":491,"title":{},"body":{"license.html":{}}}],["core",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":267,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":176,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["current",{"_index":75,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["damages",{"_index":548,"title":{},"body":{"license.html":{}}}],["deal",{"_index":506,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":557,"title":{},"body":{"license.html":{}}}],["declaration",{"_index":430,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":365,"title":{},"body":{"index.html":{},"overview.html":{}}}],["declarative",{"_index":340,"title":{},"body":{"index.html":{}}}],["declared",{"_index":402,"title":{},"body":{"index.html":{}}}],["decorator",{"_index":389,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":408,"title":{},"body":{"index.html":{}}}],["default",{"_index":213,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":411,"title":{},"body":{"index.html":{}}}],["defined",{"_index":112,"title":{},"body":{"classes/GuardForbid.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"modules/RestModule.html":{},"index.html":{}}}],["defining",{"_index":399,"title":{},"body":{"index.html":{}}}],["delete",{"_index":54,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["delete(path",{"_index":421,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":293,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["descriptor",{"_index":127,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["descriptor.value",{"_index":136,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["determined",{"_index":428,"title":{},"body":{"index.html":{}}}],["developed",{"_index":442,"title":{},"body":{"index.html":{}}}],["development",{"_index":344,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":515,"title":{},"body":{"license.html":{}}}],["docs",{"_index":387,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":268,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dynamic",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["empty",{"_index":416,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":412,"title":{},"body":{"index.html":{}}}],["enum",{"_index":50,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["enumerations",{"_index":313,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":109,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["error_handler",{"_index":42,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorhandler",{"_index":277,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["errorhandlers",{"_index":450,"title":{},"body":{"index.html":{}}}],["etc",{"_index":469,"title":{},"body":{"index.html":{}}}],["event",{"_index":543,"title":{},"body":{"license.html":{}}}],["example",{"_index":357,"title":{},"body":{"index.html":{}}}],["export",{"_index":23,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["exports",{"_index":266,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"overview.html":{}}}],["express",{"_index":534,"title":{},"body":{"license.html":{}}}],["extends",{"_index":7,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["false",{"_index":185,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["files",{"_index":505,"title":{},"body":{"license.html":{}}}],["first",{"_index":466,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":539,"title":{},"body":{"license.html":{}}}],["following",{"_index":524,"title":{},"body":{"license.html":{}}}],["forbad",{"_index":131,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["fork",{"_index":483,"title":{},"body":{"index.html":{}}}],["forroot",{"_index":251,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["forroot(undefined",{"_index":252,"title":{},"body":{"modules/RestModule.html":{}}}],["free",{"_index":498,"title":{},"body":{"license.html":{}}}],["full",{"_index":140,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["function",{"_index":130,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["function(this",{"_index":138,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["functionality",{"_index":393,"title":{},"body":{"index.html":{}}}],["functions",{"_index":315,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functionsof",{"_index":59,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["furnished",{"_index":522,"title":{},"body":{"license.html":{}}}],["get(path",{"_index":418,"title":{},"body":{"index.html":{}}}],["getting",{"_index":333,"title":{"index.html":{},"license.html":{}},"body":{}}],["globalhandlers",{"_index":188,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["going",{"_index":414,"title":{},"body":{"index.html":{}}}],["granted",{"_index":497,"title":{},"body":{"license.html":{}}}],["graph",{"_index":558,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":71,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["guardforbid",{"_index":105,"title":{"classes/GuardForbid.html":{}},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["guardforbid(request",{"_index":187,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["guardfunction",{"_index":66,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["guardfunctions",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guardfunctionsof",{"_index":70,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["guards",{"_index":32,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["guards(guardfunctions",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["guardsresult",{"_index":182,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["handle",{"_index":92,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["handler",{"_index":80,"title":{"interfaces/Handler.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{}}}],["handler(original",{"_index":240,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["handler.decorator.ts",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlerfunction",{"_index":73,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["handlerfunctionsof",{"_index":76,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["handlers",{"_index":38,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["handlers(handlers",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlers.reduce((prev",{"_index":229,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["handlersof",{"_index":77,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["head",{"_index":56,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["head(path",{"_index":424,"title":{},"body":{"index.html":{}}}],["header",{"_index":153,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["header(name",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["header[key",{"_index":169,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["headerinjector",{"_index":432,"title":{},"body":{"index.html":{}}}],["headerinjectorresponse",{"_index":84,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["headerinjectortype",{"_index":89,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":46,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers(headers",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["headers.append(key",{"_index":160,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["headers[method](name",{"_index":174,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["headersclientparam",{"_index":91,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["headersinjector",{"_index":87,"title":{"classes/HeadersInjector.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["headersobject",{"_index":81,"title":{"interfaces/HeadersObject.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["headersparam",{"_index":90,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/typealiases.html":{}}}],["hello",{"_index":377,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":496,"title":{},"body":{"license.html":{}}}],["holders",{"_index":545,"title":{},"body":{"license.html":{}}}],["http",{"_index":338,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":364,"title":{},"body":{"index.html":{}}}],["http_client",{"_index":28,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":18,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["httpclientmodule",{"_index":259,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["httperrorresponse",{"_index":21,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["httpheaders",{"_index":118,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["httprequest",{"_index":19,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["httprequest(method",{"_index":212,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["httpresponse",{"_index":20,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["identifier",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["implied",{"_index":535,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["imports",{"_index":260,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["included",{"_index":529,"title":{},"body":{"license.html":{}}}],["including",{"_index":509,"title":{},"body":{"license.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":244,"title":{},"body":{"interfaces/HeadersObject.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["inject",{"_index":88,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["injectable",{"_index":234,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["injectable.handle.bind(injectable",{"_index":237,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["injectable.handle[error_handler",{"_index":236,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["injectiontoken('base_headers",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('rest_base_url",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('rest_handlers",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":16,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inserttodo(@body",{"_index":370,"title":{},"body":{"index.html":{}}}],["inside",{"_index":403,"title":{},"body":{"index.html":{}}}],["install",{"_index":353,"title":{},"body":{"index.html":{}}}],["installation",{"_index":348,"title":{},"body":{"index.html":{}}}],["instance",{"_index":155,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["instance.inject",{"_index":158,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["instanceof",{"_index":224,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{}},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{},"overview.html":{}}}],["js",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["jsonp",{"_index":58,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["jsonp(path",{"_index":425,"title":{},"body":{"index.html":{}}}],["key",{"_index":82,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["keyof",{"_index":61,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["kind",{"_index":533,"title":{},"body":{"license.html":{}}}],["legend",{"_index":562,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":549,"title":{},"body":{"license.html":{}}}],["liable",{"_index":546,"title":{},"body":{"license.html":{}}}],["license",{"_index":489,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":510,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":463,"title":{},"body":{"index.html":{}}}],["limited",{"_index":536,"title":{},"body":{"license.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/ClientConstructor.html":{}}}],["make",{"_index":381,"title":{},"body":{"index.html":{}}}],["makes",{"_index":396,"title":{},"body":{"index.html":{}}}],["marked",{"_index":395,"title":{},"body":{"index.html":{}}}],["marks",{"_index":390,"title":{},"body":{"index.html":{}}}],["matching",{"_index":102,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":538,"title":{},"body":{"license.html":{}}}],["merge",{"_index":513,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":163,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["methodhandlers",{"_index":194,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["methodheaders",{"_index":166,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["methodname",{"_index":135,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["methods",{"_index":241,"title":{},"body":{"classes/HeadersInjector.html":{},"modules/RestModule.html":{},"index.html":{}}}],["miscellaneous",{"_index":312,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":490,"title":{},"body":{"index.html":{},"license.html":{}}}],["modify",{"_index":512,"title":{},"body":{"license.html":{}}}],["module",{"_index":246,"title":{"modules/RestModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":248,"title":{"modules.html":{}},"body":{"modules/RestModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":256,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["more",{"_index":342,"title":{},"body":{"index.html":{}}}],["multi",{"_index":264,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["name",{"_index":115,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["never}[keyof",{"_index":65,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":190,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["next(request",{"_index":222,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["next.prototype",{"_index":233,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["next[error_handler",{"_index":238,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["ngmodule",{"_index":257,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["noninfringement",{"_index":542,"title":{},"body":{"license.html":{}}}],["notice",{"_index":527,"title":{},"body":{"license.html":{}}}],["now",{"_index":487,"title":{},"body":{"index.html":{}}}],["npm",{"_index":352,"title":{},"body":{"index.html":{}}}],["null",{"_index":147,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["number",{"_index":94,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["object",{"_index":8,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["object.entries((target.constructor[param_headers",{"_index":172,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["object.keys(_headers",{"_index":159,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["object.keys(header",{"_index":168,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["observable",{"_index":119,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["obtaining",{"_index":501,"title":{},"body":{"license.html":{}}}],["onready",{"_index":100,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{}}}],["optional",{"_index":104,"title":{},"body":{"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":57,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options(path",{"_index":423,"title":{},"body":{"index.html":{}}}],["original",{"_index":74,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["otherservices",{"_index":468,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":413,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":555,"title":{},"body":{"license.html":{},"overview.html":{}}}],["overview",{"_index":561,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":60,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["package",{"_index":292,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["param_headers",{"_index":44,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameter",{"_index":170,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["parameterdecorator",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"classes/GuardForbid.html":{},"modules/RestModule.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":540,"title":{},"body":{"license.html":{}}}],["passed",{"_index":221,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["patch",{"_index":55,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["patch(path",{"_index":422,"title":{},"body":{"index.html":{}}}],["path",{"_index":133,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"index.html":{}}}],["permission",{"_index":495,"title":{},"body":{"license.html":{}}}],["permit",{"_index":520,"title":{},"body":{"license.html":{}}}],["person",{"_index":500,"title":{},"body":{"license.html":{}}}],["persons",{"_index":521,"title":{},"body":{"license.html":{}}}],["portions",{"_index":531,"title":{},"body":{"license.html":{}}}],["post",{"_index":52,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["post('todos",{"_index":369,"title":{},"body":{"index.html":{}}}],["post(path",{"_index":419,"title":{},"body":{"index.html":{}}}],["posttodo(@body",{"_index":426,"title":{},"body":{"index.html":{}}}],["posttodo(todo",{"_index":383,"title":{},"body":{"index.html":{}}}],["prev",{"_index":191,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["prev.then(passed",{"_index":220,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["prev[method](res",{"_index":239,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["process",{"_index":180,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["projects/.../body.decorator.ts",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../client.decorator.ts",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../error",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../guards.decorator.ts",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../handlers.decorator.ts",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../header.decorator.ts",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../headers.decorator.ts",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../request",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../request.decorator.ts",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tokens.ts",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../types.ts",{"_index":314,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/body.decorator.ts",{"_index":271,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/client.decorator.ts",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/error",{"_index":275,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/guards.decorator.ts",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/handlers.decorator.ts",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/header.decorator.ts",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/headers.decorator.ts",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/rest/src/lib/request",{"_index":107,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/rest/src/lib/request.decorator.ts",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/rest.module.ts",{"_index":249,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["projects/rest/src/lib/rest.module.ts:27",{"_index":254,"title":{},"body":{"modules/RestModule.html":{}}}],["projects/rest/src/lib/tokens.ts",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/types.ts",{"_index":6,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/rest/src/lib/types.ts:38",{"_index":245,"title":{},"body":{"interfaces/HeadersObject.html":{}}}],["projects/rest/src/lib/types.ts:45",{"_index":242,"title":{},"body":{"classes/HeadersInjector.html":{}}}],["promise",{"_index":69,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["promise.resolve(true",{"_index":226,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["promiselike",{"_index":230,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"interfaces/RequestConfig.html":{},"interfaces/RootConfiguration.html":{}}}],["propertydescriptor",{"_index":128,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":126,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["provide",{"_index":262,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["provided",{"_index":472,"title":{},"body":{"index.html":{},"license.html":{}}}],["providedin",{"_index":98,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{}}}],["provider",{"_index":258,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["providers",{"_index":261,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":392,"title":{},"body":{"index.html":{}}}],["public",{"_index":110,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["publish",{"_index":514,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":541,"title":{},"body":{"license.html":{}}}],["put",{"_index":53,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["put(path",{"_index":420,"title":{},"body":{"index.html":{}}}],["ready",{"_index":460,"title":{},"body":{"index.html":{}}}],["refactored",{"_index":486,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["replace",{"_index":171,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["repository",{"_index":482,"title":{},"body":{"index.html":{}}}],["request",{"_index":67,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["requestbuilder",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["requestbuilder(requestmethod.delete",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.get",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.head",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.jsonp",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.options",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.patch",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.post",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(requestmethod.put",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestbuilder(type",{"_index":132,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["requestconfig",{"_index":198,"title":{"interfaces/RequestConfig.html":{}},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{}}}],["requestfactory",{"_index":199,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["requestfactory(method",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["requestfactory(type",{"_index":177,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod",{"_index":51,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/enumerations.html":{}}}],["requestmethod.delete",{"_index":205,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.get",{"_index":204,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.head",{"_index":206,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.jsonp",{"_index":207,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.options",{"_index":208,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.patch",{"_index":202,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.post",{"_index":200,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["requestmethod.put",{"_index":201,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["res",{"_index":228,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["reset",{"_index":565,"title":{},"body":{"overview.html":{}}}],["rest",{"_index":336,"title":{},"body":{"index.html":{}}}],["rest_handlers",{"_index":121,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["restclient",{"_index":391,"title":{},"body":{"index.html":{}}}],["restguard",{"_index":441,"title":{},"body":{"index.html":{}}}],["restmodule",{"_index":247,"title":{"modules/RestModule.html":{}},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{},"modules.html":{}}}],["restmodule.forroot",{"_index":471,"title":{},"body":{"index.html":{}}}],["restmodule.forroot({baseurl",{"_index":363,"title":{},"body":{"index.html":{}}}],["restor",{"_index":351,"title":{},"body":{"index.html":{}}}],["restpropertydecorator",{"_index":124,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["restriction",{"_index":508,"title":{},"body":{"license.html":{}}}],["result",{"_index":101,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.topromise",{"_index":225,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["results",{"_index":103,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":134,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["returning",{"_index":417,"title":{},"body":{"index.html":{}}}],["returns",{"_index":243,"title":{},"body":{"classes/HeadersInjector.html":{},"modules/RestModule.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":511,"title":{},"body":{"license.html":{}}}],["root",{"_index":99,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"index.html":{}}}],["rootconfiguration",{"_index":253,"title":{"interfaces/RootConfiguration.html":{}},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{}}}],["run",{"_index":179,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["rxjs",{"_index":120,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"dependencies.html":{}}}],["save",{"_index":354,"title":{},"body":{"index.html":{}}}],["secret",{"_index":404,"title":{},"body":{"index.html":{}}}],["selector",{"_index":374,"title":{},"body":{"index.html":{}}}],["sell",{"_index":518,"title":{},"body":{"license.html":{}}}],["service",{"_index":397,"title":{},"body":{"index.html":{}}}],["services",{"_index":475,"title":{},"body":{"index.html":{}}}],["set",{"_index":152,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["shall",{"_index":528,"title":{},"body":{"license.html":{}}}],["shouldn't",{"_index":470,"title":{},"body":{"index.html":{}}}],["software",{"_index":503,"title":{},"body":{"license.html":{}}}],["something",{"_index":382,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"miscellaneous/functions.html":{}}}],["source.then(res",{"_index":227,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["specified",{"_index":410,"title":{},"body":{"index.html":{}}}],["started",{"_index":334,"title":{"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["startguardcheck",{"_index":214,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["startguardcheck(target",{"_index":183,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":250,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["steven166/angular",{"_index":484,"title":{},"body":{"index.html":{}}}],["string",{"_index":83,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["subject",{"_index":523,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":516,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":530,"title":{},"body":{"license.html":{}}}],["super('a",{"_index":129,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["supports",{"_index":464,"title":{},"body":{"index.html":{}}}],["switch",{"_index":209,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["symbol",{"_index":26,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('base_url",{"_index":31,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('bodies",{"_index":37,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_guards",{"_index":35,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_handlers",{"_index":41,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('client_headers",{"_index":49,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('error_handler",{"_index":43,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('guards",{"_index":33,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('handlers",{"_index":39,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('headers",{"_index":47,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('http_client",{"_index":29,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('injector",{"_index":27,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["symbol('param_headers",{"_index":45,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":62,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{}}}],["t[p",{"_index":63,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["table",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":125,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["target.constructor[bodies",{"_index":146,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[guards][client_guards",{"_index":217,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[guards][methodname",{"_index":218,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[handlers][client_handlers",{"_index":193,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[handlers][methodname",{"_index":195,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["target.constructor[headers",{"_index":165,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["template",{"_index":376,"title":{},"body":{"index.html":{}}}],["thalesrc",{"_index":494,"title":{},"body":{"license.html":{}}}],["thalesrc/angular",{"_index":335,"title":{},"body":{"index.html":{}}}],["this.client.inserttodo(todo",{"_index":384,"title":{},"body":{"index.html":{}}}],["this.client.todos().then(todos",{"_index":380,"title":{},"body":{"index.html":{}}}],["this[base_url]}/${url",{"_index":178,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[header",{"_index":167,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[http_client].request(request).topromise",{"_index":197,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(base_headers",{"_index":151,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(header",{"_index":156,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["this[injector].get(rest_handlers)).reduce((prev",{"_index":189,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["throw",{"_index":184,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["todo",{"_index":371,"title":{},"body":{"index.html":{}}}],["todo.client",{"_index":360,"title":{},"body":{"index.html":{}}}],["todo.client.ts",{"_index":367,"title":{},"body":{"index.html":{}}}],["todo.component",{"_index":362,"title":{},"body":{"index.html":{}}}],["todo.component.ts",{"_index":372,"title":{},"body":{"index.html":{}}}],["todoclient",{"_index":359,"title":{},"body":{"index.html":{}}}],["todocomponent",{"_index":361,"title":{},"body":{"index.html":{}}}],["todos",{"_index":368,"title":{},"body":{"index.html":{}}}],["tokens",{"_index":123,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["topsecret",{"_index":476,"title":{},"body":{"index.html":{}}}],["tort",{"_index":553,"title":{},"body":{"license.html":{}}}],["true",{"_index":265,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["try",{"_index":181,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"classes/GuardForbid.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":567,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":148,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["types",{"_index":117,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{}}}],["typescript",{"_index":339,"title":{},"body":{"index.html":{}}}],["u",{"_index":64,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["undefined",{"_index":143,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{}}}],["under",{"_index":343,"title":{},"body":{"index.html":{}}}],["unique",{"_index":25,"title":{},"body":{"interfaces/ClientConstructor.html":{},"interfaces/ClientInstance.html":{},"interfaces/ClientOptions.html":{},"interfaces/Handler.html":{},"classes/HeadersInjector.html":{},"interfaces/HeadersObject.html":{}}}],["url",{"_index":141,"title":{},"body":{"classes/GuardForbid.html":{},"interfaces/RequestConfig.html":{},"miscellaneous/functions.html":{}}}],["use",{"_index":345,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":415,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":263,"title":{},"body":{"modules/RestModule.html":{},"interfaces/RootConfiguration.html":{},"index.html":{}}}],["util",{"_index":406,"title":{},"body":{"index.html":{}}}],["value",{"_index":255,"title":{},"body":{"modules/RestModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":569,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":537,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":532,"title":{},"body":{"license.html":{}}}],["whether",{"_index":550,"title":{},"body":{"license.html":{}}}],["without",{"_index":507,"title":{},"body":{"license.html":{}}}],["world",{"_index":378,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":349,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":564,"title":{},"body":{"overview.html":{}}}],["zçelik",{"_index":481,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ClientConstructor.html":{"url":"interfaces/ClientConstructor.html","title":"interface - ClientConstructor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientConstructor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Object\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        constructor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constructor\n                                    \n                                \n                                \n                                    \n                                        constructor:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    }\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientInstance.html":{"url":"interfaces/ClientInstance.html","title":"interface - ClientInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        BASE_URL\n                                \n                                \n                                        HTTP_CLIENT\n                                \n                                \n                                        INJECTOR\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BASE_URL\n                                    \n                                \n                                \n                                    \n                                        BASE_URL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HTTP_CLIENT\n                                    \n                                \n                                \n                                    \n                                        HTTP_CLIENT:         HttpClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpClient\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        INJECTOR\n                                    \n                                \n                                \n                                    \n                                        INJECTOR:         Injector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Injector\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    }\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientOptions.html":{"url":"interfaces/ClientOptions.html","title":"interface - ClientOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseHeaders\n                                \n                                \n                                            Optional\n                                        baseUrl\n                                \n                                \n                                            Optional\n                                        guards\n                                \n                                \n                                            Optional\n                                        handlers\n                                \n                                \n                                            Optional\n                                        onReady\n                                \n                                \n                                            Optional\n                                        providedIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHeaders\n                                    \n                                \n                                \n                                    \n                                        baseHeaders:         HeadersClientParam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HeadersClientParam\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        guards\n                                    \n                                \n                                \n                                    \n                                        guards:         Guard\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Guard\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlers\n                                    \n                                \n                                \n                                    \n                                        handlers:         HandlersOf\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandlersOf\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onReady\n                                    \n                                \n                                \n                                    \n                                        onReady:         FunctionsOf\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FunctionsOf\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providedIn\n                                    \n                                \n                                \n                                    \n                                        providedIn:     Type | \"root\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type | \"root\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    }\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuardForbid.html":{"url":"classes/GuardForbid.html","title":"class - GuardForbid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuardForbid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/request-builder.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: HttpRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/rest/src/lib/request-builder.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    HttpRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/rest/src/lib/request-builder.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ClientInstance, HTTP_CLIENT, BASE_URL, GUARDS, ClientConstructor,\n          CLIENT_GUARDS, BODIES, INJECTOR, HANDLERS, CLIENT_HANDLERS, HandlersOf,\n          ERROR_HANDLER, RequestMethod, PARAM_HEADERS, HeadersParam, HeadersInjector,\n          HeadersObject, HEADERS, CLIENT_HEADERS, HeadersClientParam } from './types';\nimport { HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { REST_HANDLERS, BASE_HEADERS } from './tokens';\n\ntype RestPropertyDecorator = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;\n\nclass GuardForbid extends Error {\n  constructor(\n    public request: HttpRequest\n  ) {\n    super('A guard function forbad the request');\n  }\n}\n\nexport function requestBuilder(type: RequestMethod): (path?: string) => RestPropertyDecorator {\n  return function (path?: string): RestPropertyDecorator {\n    return function (target: ClientConstructor, methodName: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n      descriptor.value = async function(this: ClientInstance, ...args: any[]) {\n        // > Configure full url\n        // _____________________________________________________________________________\n        const url = path !== undefined ? path : methodName;\n\n        // > Configure request body\n        // _____________________________________________________________________________\n        const bodyParamIndex = (target.constructor[BODIES] || {})[methodName];\n        let body: any = null;\n\n        if (typeof bodyParamIndex === 'number') {\n          body = args[bodyParamIndex];\n        }\n\n        // > Configure Headers\n        // _____________________________________________________________________________\n        let headers = new HttpHeaders();\n\n        // >> Base Headers\n        const baseHeaders: HeadersParam[] =  this[INJECTOR].get(BASE_HEADERS);\n\n        for (const set of baseHeaders) {\n          for (const header of set) {\n            let _headers: HeadersObject =  header;\n\n            if (typeof header === 'function') {\n              const instance: HeadersInjector = this[INJECTOR].get(header);\n              _headers = await instance.inject();\n            }\n\n            for (const key of Object.keys(_headers)) {\n              headers = headers.append(key, _headers[key]);\n            }\n          }\n        }\n\n        // >> Client Headers & Method Headers\n        const clientHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[CLIENT_HEADERS] || [];\n        const methodHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[methodName] || [];\n\n        for (let header of [...clientHeaders, ...methodHeaders]) {\n          if (typeof header === 'function') {\n            const instance: HeadersInjector = this[INJECTOR].get(header);\n            header = await instance.inject();\n          }\n\n          if (typeof header === 'string') {\n            header = await this[header]();\n          }\n\n          for (const key of Object.keys(header)) {\n            headers = headers.append(key, header[key]);\n          }\n        }\n\n        // >> Parameter Headers\n        for (const [name, [replace, index]] of Object.entries((target.constructor[PARAM_HEADERS] || {})[methodName] || {})) {\n          const method: 'set' | 'append' = replace ? 'set' : 'append';\n\n          headers = headers[method](name, args[index]);\n        }\n\n        // > Create request object\n        // _____________________________________________________________________________\n        const request = requestFactory(type as any, `${this[BASE_URL]}/${url}`, { body, headers });\n\n        // > Run guard process\n        // _____________________________________________________________________________\n        try {\n          const guardsResult = await startGuardCheck(target, methodName, request, this);\n          if (!guardsResult) { throw false; }\n\n        } catch (error) {\n          if (error === false) {\n            throw new GuardForbid(request);\n          }\n\n          throw error;\n        }\n\n        // > Handlers\n        // _____________________________________________________________________________\n        const globalHandlers: HandlersOf = (this[INJECTOR].get(REST_HANDLERS)).reduce((prev, next) => [...prev, ...next], []);\n        const clientHandlers: HandlersOf = target.constructor[HANDLERS][CLIENT_HANDLERS];\n        const methodHandlers: HandlersOf = target.constructor[HANDLERS][methodName] || [];\n\n        // > Result\n        // _____________________________________________________________________________\n        return await chainHandlers(\n          [...globalHandlers, ...clientHandlers, ...methodHandlers],\n          this,\n          >>this[HTTP_CLIENT].request(request).toPromise()\n        );\n      };\n\n      return descriptor;\n    };\n  };\n}\n\ninterface RequestConfig {\n  headers: HttpHeaders;\n}\n\nfunction requestFactory(\n  method: RequestMethod.POST | RequestMethod.PUT | RequestMethod.PATCH,\n  url: string,\n  config: RequestConfig\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod.GET | RequestMethod.DELETE | RequestMethod.HEAD | RequestMethod.JSONP | RequestMethod.OPTIONS,\n  url: string,\n  config: RequestConfig & { body?: T }\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod,\n  url: string,\n  config: RequestConfig & { body?: T }\n): HttpRequest {\n  switch (method) {\n    case RequestMethod.POST:\n    case RequestMethod.PUT:\n    case RequestMethod.PATCH:\n      const body = config.body;\n      delete config.body;\n      return new HttpRequest(method, url, body, config);\n    default:\n      return new HttpRequest(method, url, config);\n  }\n}\n\nasync function startGuardCheck(\n  target: ClientConstructor,\n  methodName: string,\n  request: HttpRequest,\n  context: ClientInstance\n): Promise {\n  const allGuards = [...target.constructor[GUARDS][CLIENT_GUARDS], ...(target.constructor[GUARDS][methodName] || [])];\n\n  return await allGuards.reduce((prev, next) => {\n    return prev.then(passed => {\n      if (!passed) {\n        throw false;\n      }\n\n      let result = typeof next === 'function' ? next(request) : (context)[next](request);\n\n      if (result instanceof Observable) {\n        result = result.toPromise();\n      }\n\n      return result;\n    });\n  }, Promise.resolve(true));\n}\n\nfunction chainHandlers(\n  handlers: HandlersOf,\n  context: ClientInstance,\n  source: Promise>\n): Promise {\n  let original: HttpResponse;\n\n  source.then(res => {\n    original = res;\n  }, error => {\n    original = error;\n  });\n\n  return handlers.reduce((prev: PromiseLike, next) => {\n    let handler: Function;\n    let method: 'then' | 'catch';\n\n    if (typeof next === 'string') {\n      method = context[next][ERROR_HANDLER] ? 'catch' : 'then';\n      handler = (context[next]).bind(context);\n    } else if (next.prototype && 'handle' in next.prototype) {\n      const injectable = context[INJECTOR].get(next);\n      method = injectable.handle[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = injectable.handle.bind(injectable);\n    } else {\n      method = next[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = next;\n    }\n\n    return prev[method](res => handler(original, res));\n  }, source);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Handler.html":{"url":"interfaces/Handler.html","title":"interface - Handler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Handler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         HandlerFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandlerFunction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    }\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HeadersInjector.html":{"url":"classes/HeadersInjector.html","title":"class - HeadersInjector","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HeadersInjector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                inject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            inject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    inject()\n                \n            \n\n\n            \n                \n                    Defined in projects/rest/src/lib/types.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HeaderInjectorResponse\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    }\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HeadersObject.html":{"url":"interfaces/HeadersObject.html","title":"interface - HeadersObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HeadersObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/types.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    string | []\n\n                    \n                \n                        \n                            \n                                Defined in projects/rest/src/lib/types.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Injector, Type } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\n\nexport const INJECTOR: unique symbol = Symbol('INJECTOR');\nexport const HTTP_CLIENT: unique symbol = Symbol('HTTP_CLIENT');\nexport const BASE_URL: unique symbol = Symbol('BASE_URL');\nexport const GUARDS: unique symbol = Symbol('GUARDS');\nexport const CLIENT_GUARDS: unique symbol = Symbol('CLIENT_GUARDS');\nexport const BODIES: unique symbol = Symbol('BODIES');\nexport const HANDLERS: unique symbol = Symbol('HANDLERS');\nexport const CLIENT_HANDLERS: unique symbol = Symbol('CLIENT_HANDLERS');\nexport const ERROR_HANDLER: unique symbol = Symbol('ERROR_HANDLER');\nexport const PARAM_HEADERS: unique symbol = Symbol('PARAM_HEADERS');\nexport const HEADERS: unique symbol = Symbol('HEADERS');\nexport const CLIENT_HEADERS: unique symbol = Symbol('CLIENT_HEADERS');\n\nexport enum RequestMethod {\n  GET = 'GET',\n  POST = 'POST',\n  PUT = 'PUT',\n  DELETE = 'DELETE',\n  PATCH = 'PATCH',\n  HEAD = 'HEAD',\n  OPTIONS = 'OPTIONS',\n  JSONP = 'JSONP'\n}\n\ntype FunctionsOf = {[P in keyof T]: T[P] extends U ? P : never}[keyof T];\n\nexport type GuardFunction = (request: HttpRequest) => boolean | Promise;\nexport type GuardFunctionsOf = FunctionsOf;\nexport type Guard = Array | GuardFunction> | GuardFunctionsOf | GuardFunction;\n\nexport type HandlerFunction = (original: HttpResponse | HttpErrorResponse, current: any) => any | Promise;\nexport type HandlerFunctionsOf = FunctionsOf;\nexport type HandlersOf = Array | HandlerFunction | (new (...args: any[]) => Handler)>;\n\nexport interface HeadersObject {\n  [key: string]: string | string[];\n}\n\ntype HeaderInjectorResponse = HeadersObject | Promise;\n\nexport abstract class HeadersInjector {\n  abstract inject(): HeaderInjectorResponse;\n}\n\nexport type HeaderInjectorType = new (...args: any[]) => HeadersInjector;\nexport type HeadersParam = Array;\nexport type HeadersClientParam = Array HeaderInjectorResponse>>;\n\nexport interface Handler {\n  handle: HandlerFunction;\n}\n\nexport interface ClientInstance {\n  [INJECTOR]: Injector;\n  [HTTP_CLIENT]: HttpClient;\n  [BASE_URL]: string;\n}\n\nexport interface ClientConstructor extends Object {\n  constructor: {\n    new (...args: any[]): any;\n    [GUARDS]: {\n      [CLIENT_GUARDS]: Array | GuardFunction>;\n      [key: string]: Array | GuardFunction>\n    };\n    [BODIES]: {\n      [key: string]: number;\n    };\n    [HANDLERS]: {\n      [CLIENT_HANDLERS]: HandlersOf;\n      [key: string]: HandlersOf;\n    };\n    [PARAM_HEADERS]: {\n      [key: string]: {\n        [key: string]: [boolean, number];\n      }\n    };\n    [HEADERS]: {\n      [CLIENT_HEADERS]: HeadersClientParam;\n      [key: string]: HeadersClientParam;\n    }\n  };\n}\n\nexport interface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestConfig.html":{"url":"interfaces/RequestConfig.html","title":"interface - RequestConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/request-builder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        headers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:         HttpHeaders\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HttpHeaders\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClientInstance, HTTP_CLIENT, BASE_URL, GUARDS, ClientConstructor,\n          CLIENT_GUARDS, BODIES, INJECTOR, HANDLERS, CLIENT_HANDLERS, HandlersOf,\n          ERROR_HANDLER, RequestMethod, PARAM_HEADERS, HeadersParam, HeadersInjector,\n          HeadersObject, HEADERS, CLIENT_HEADERS, HeadersClientParam } from './types';\nimport { HttpRequest, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { REST_HANDLERS, BASE_HEADERS } from './tokens';\n\ntype RestPropertyDecorator = (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor;\n\nclass GuardForbid extends Error {\n  constructor(\n    public request: HttpRequest\n  ) {\n    super('A guard function forbad the request');\n  }\n}\n\nexport function requestBuilder(type: RequestMethod): (path?: string) => RestPropertyDecorator {\n  return function (path?: string): RestPropertyDecorator {\n    return function (target: ClientConstructor, methodName: string, descriptor: PropertyDescriptor): PropertyDescriptor {\n      descriptor.value = async function(this: ClientInstance, ...args: any[]) {\n        // > Configure full url\n        // _____________________________________________________________________________\n        const url = path !== undefined ? path : methodName;\n\n        // > Configure request body\n        // _____________________________________________________________________________\n        const bodyParamIndex = (target.constructor[BODIES] || {})[methodName];\n        let body: any = null;\n\n        if (typeof bodyParamIndex === 'number') {\n          body = args[bodyParamIndex];\n        }\n\n        // > Configure Headers\n        // _____________________________________________________________________________\n        let headers = new HttpHeaders();\n\n        // >> Base Headers\n        const baseHeaders: HeadersParam[] =  this[INJECTOR].get(BASE_HEADERS);\n\n        for (const set of baseHeaders) {\n          for (const header of set) {\n            let _headers: HeadersObject =  header;\n\n            if (typeof header === 'function') {\n              const instance: HeadersInjector = this[INJECTOR].get(header);\n              _headers = await instance.inject();\n            }\n\n            for (const key of Object.keys(_headers)) {\n              headers = headers.append(key, _headers[key]);\n            }\n          }\n        }\n\n        // >> Client Headers & Method Headers\n        const clientHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[CLIENT_HEADERS] || [];\n        const methodHeaders: HeadersClientParam = (target.constructor[HEADERS] || {})[methodName] || [];\n\n        for (let header of [...clientHeaders, ...methodHeaders]) {\n          if (typeof header === 'function') {\n            const instance: HeadersInjector = this[INJECTOR].get(header);\n            header = await instance.inject();\n          }\n\n          if (typeof header === 'string') {\n            header = await this[header]();\n          }\n\n          for (const key of Object.keys(header)) {\n            headers = headers.append(key, header[key]);\n          }\n        }\n\n        // >> Parameter Headers\n        for (const [name, [replace, index]] of Object.entries((target.constructor[PARAM_HEADERS] || {})[methodName] || {})) {\n          const method: 'set' | 'append' = replace ? 'set' : 'append';\n\n          headers = headers[method](name, args[index]);\n        }\n\n        // > Create request object\n        // _____________________________________________________________________________\n        const request = requestFactory(type as any, `${this[BASE_URL]}/${url}`, { body, headers });\n\n        // > Run guard process\n        // _____________________________________________________________________________\n        try {\n          const guardsResult = await startGuardCheck(target, methodName, request, this);\n          if (!guardsResult) { throw false; }\n\n        } catch (error) {\n          if (error === false) {\n            throw new GuardForbid(request);\n          }\n\n          throw error;\n        }\n\n        // > Handlers\n        // _____________________________________________________________________________\n        const globalHandlers: HandlersOf = (this[INJECTOR].get(REST_HANDLERS)).reduce((prev, next) => [...prev, ...next], []);\n        const clientHandlers: HandlersOf = target.constructor[HANDLERS][CLIENT_HANDLERS];\n        const methodHandlers: HandlersOf = target.constructor[HANDLERS][methodName] || [];\n\n        // > Result\n        // _____________________________________________________________________________\n        return await chainHandlers(\n          [...globalHandlers, ...clientHandlers, ...methodHandlers],\n          this,\n          >>this[HTTP_CLIENT].request(request).toPromise()\n        );\n      };\n\n      return descriptor;\n    };\n  };\n}\n\ninterface RequestConfig {\n  headers: HttpHeaders;\n}\n\nfunction requestFactory(\n  method: RequestMethod.POST | RequestMethod.PUT | RequestMethod.PATCH,\n  url: string,\n  config: RequestConfig\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod.GET | RequestMethod.DELETE | RequestMethod.HEAD | RequestMethod.JSONP | RequestMethod.OPTIONS,\n  url: string,\n  config: RequestConfig & { body?: T }\n): HttpRequest;\nfunction requestFactory(\n  method: RequestMethod,\n  url: string,\n  config: RequestConfig & { body?: T }\n): HttpRequest {\n  switch (method) {\n    case RequestMethod.POST:\n    case RequestMethod.PUT:\n    case RequestMethod.PATCH:\n      const body = config.body;\n      delete config.body;\n      return new HttpRequest(method, url, body, config);\n    default:\n      return new HttpRequest(method, url, config);\n  }\n}\n\nasync function startGuardCheck(\n  target: ClientConstructor,\n  methodName: string,\n  request: HttpRequest,\n  context: ClientInstance\n): Promise {\n  const allGuards = [...target.constructor[GUARDS][CLIENT_GUARDS], ...(target.constructor[GUARDS][methodName] || [])];\n\n  return await allGuards.reduce((prev, next) => {\n    return prev.then(passed => {\n      if (!passed) {\n        throw false;\n      }\n\n      let result = typeof next === 'function' ? next(request) : (context)[next](request);\n\n      if (result instanceof Observable) {\n        result = result.toPromise();\n      }\n\n      return result;\n    });\n  }, Promise.resolve(true));\n}\n\nfunction chainHandlers(\n  handlers: HandlersOf,\n  context: ClientInstance,\n  source: Promise>\n): Promise {\n  let original: HttpResponse;\n\n  source.then(res => {\n    original = res;\n  }, error => {\n    original = error;\n  });\n\n  return handlers.reduce((prev: PromiseLike, next) => {\n    let handler: Function;\n    let method: 'then' | 'catch';\n\n    if (typeof next === 'string') {\n      method = context[next][ERROR_HANDLER] ? 'catch' : 'then';\n      handler = (context[next]).bind(context);\n    } else if (next.prototype && 'handle' in next.prototype) {\n      const injectable = context[INJECTOR].get(next);\n      method = injectable.handle[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = injectable.handle.bind(injectable);\n    } else {\n      method = next[ERROR_HANDLER] ? 'catch' : 'then';\n      handler = next;\n    }\n\n    return prev[method](res => handler(original, res));\n  }, source);\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RestModule.html":{"url":"modules/RestModule.html","title":"module - RestModule","body":"\n                   \n\n\n\n\n    Modules\n    RestModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/rest/src/lib/rest.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(undefined: RootConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in projects/rest/src/lib/rest.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    \n                                                RootConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BASE_URL, REST_HANDLERS, BASE_HEADERS } from './tokens';\nimport { HandlersOf, HeadersParam, HeadersInjector } from './types';\n\ninterface RootConfiguration {\n  baseUrl?: string;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersParam;\n}\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    {provide: BASE_URL, useValue: ''},\n    {provide: REST_HANDLERS, useValue: [], multi: true},\n    {provide: BASE_HEADERS, useValue: [], multi: true}\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class RestModule {\n  public static forRoot({ baseUrl = '', handlers = [], baseHeaders = [] }: RootConfiguration = {}): ModuleWithProviders {\n    return {\n      ngModule: RestModule,\n      providers: [\n        {provide: BASE_URL, useValue: baseUrl},\n        {provide: REST_HANDLERS, useValue: handlers, multi: true},\n        {provide: BASE_HEADERS, useValue: baseHeaders, multi: true}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RootConfiguration.html":{"url":"interfaces/RootConfiguration.html","title":"interface - RootConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RootConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/rest/src/lib/rest.module.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        baseHeaders\n                                \n                                \n                                            Optional\n                                        baseUrl\n                                \n                                \n                                            Optional\n                                        handlers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        baseHeaders\n                                    \n                                \n                                \n                                    \n                                        baseHeaders:         HeadersParam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HeadersParam\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        baseUrl\n                                    \n                                \n                                \n                                    \n                                        baseUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handlers\n                                    \n                                \n                                \n                                    \n                                        handlers:         HandlersOf\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HandlersOf\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { BASE_URL, REST_HANDLERS, BASE_HEADERS } from './tokens';\nimport { HandlersOf, HeadersParam, HeadersInjector } from './types';\n\ninterface RootConfiguration {\n  baseUrl?: string;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersParam;\n}\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    {provide: BASE_URL, useValue: ''},\n    {provide: REST_HANDLERS, useValue: [], multi: true},\n    {provide: BASE_HEADERS, useValue: [], multi: true}\n  ],\n  exports: [\n    HttpClientModule\n  ]\n})\nexport class RestModule {\n  public static forRoot({ baseUrl = '', handlers = [], baseHeaders = [] }: RootConfiguration = {}): ModuleWithProviders {\n    return {\n      ngModule: RestModule,\n      providers: [\n        {provide: BASE_URL, useValue: baseUrl},\n        {provide: REST_HANDLERS, useValue: handlers, multi: true},\n        {provide: BASE_HEADERS, useValue: baseHeaders, multi: true}\n      ]\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/rest/src/lib/body.decorator.ts\n            \n            function\n            Body\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/client.decorator.ts\n            \n            function\n            Client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/error-handler.decorator.ts\n            \n            function\n            ErrorHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/guards.decorator.ts\n            \n            function\n            Guards\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/handlers.decorator.ts\n            \n            function\n            Handlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/header.decorator.ts\n            \n            function\n            Header\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/headers.decorator.ts\n            \n            function\n            Headers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            class\n            GuardForbid\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            interface\n            RequestConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            chainHandlers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestBuilder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            requestFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request-builder.ts\n            \n            function\n            startGuardCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Delete\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Head\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Jsonp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Options\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Patch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Post\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/request.decorator.ts\n            \n            variable\n            Put\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/rest.module.ts\n            \n            interface\n            RootConfiguration\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            BASE_HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/tokens.ts\n            \n            variable\n            REST_HANDLERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            class\n            HeadersInjector\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            ClientConstructor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            ClientInstance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            ClientOptions\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            Handler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            interface\n            HeadersObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            BODIES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_GUARDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_HANDLERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            CLIENT_HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            ERROR_HANDLER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            GUARDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            HANDLERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            HTTP_CLIENT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            INJECTOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/rest/src/lib/types.ts\n            \n            variable\n            PARAM_HEADERS\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~8.2.3\n        \n            @angular/common : ~8.2.3\n        \n            @angular/compiler : ~8.2.3\n        \n            @angular/core : ~8.2.3\n        \n            @angular/forms : ~8.2.3\n        \n            @angular/platform-browser : ~8.2.3\n        \n            @angular/platform-browser-dynamic : ~8.2.3\n        \n            @angular/router : ~8.2.3\n        \n            core-js : ^2.5.4\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~6.5.2\n        \n            zone.js : ~0.9.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RequestMethod   (projects/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/types.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestMethod\n                    \n                \n                        \n                            \n                                 GET\n                            \n                        \n                        \n                            \n                                Value : GET\n                            \n                        \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : POST\n                            \n                        \n                        \n                            \n                                 PUT\n                            \n                        \n                        \n                            \n                                Value : PUT\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n                        \n                            \n                                 PATCH\n                            \n                        \n                        \n                            \n                                Value : PATCH\n                            \n                        \n                        \n                            \n                                 HEAD\n                            \n                        \n                        \n                            \n                                Value : HEAD\n                            \n                        \n                        \n                            \n                                 OPTIONS\n                            \n                        \n                        \n                            \n                                Value : OPTIONS\n                            \n                        \n                        \n                            \n                                 JSONP\n                            \n                        \n                        \n                            \n                                Value : JSONP\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Body   (projects/.../body.decorator.ts)\n                        \n                        \n                            chainHandlers   (projects/.../request-builder.ts)\n                        \n                        \n                            Client   (projects/.../client.decorator.ts)\n                        \n                        \n                            ErrorHandler   (projects/.../error-handler.decorator.ts)\n                        \n                        \n                            Guards   (projects/.../guards.decorator.ts)\n                        \n                        \n                            Handlers   (projects/.../handlers.decorator.ts)\n                        \n                        \n                            Header   (projects/.../header.decorator.ts)\n                        \n                        \n                            Headers   (projects/.../headers.decorator.ts)\n                        \n                        \n                            requestBuilder   (projects/.../request-builder.ts)\n                        \n                        \n                            requestFactory   (projects/.../request-builder.ts)\n                        \n                        \n                            requestFactory   (projects/.../request-builder.ts)\n                        \n                        \n                            requestFactory   (projects/.../request-builder.ts)\n                        \n                        \n                            startGuardCheck   (projects/.../request-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/body.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Body\n                        \n                        \n                    \n                \n            \n            \n                \nBody()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     ParameterDecorator\n\n                    \n                \n            \n        \n    \n    projects/rest/src/lib/request-builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            chainHandlers\n                        \n                        \n                    \n                \n            \n            \n                \nchainHandlers(handlers, context, source)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handlers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestBuilder\n                        \n                        \n                    \n                \n            \n            \n                \nrequestBuilder(type)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RestPropertyDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrequestFactory(method, url, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrequestFactory(method, url, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestFactory\n                        \n                        \n                    \n                \n            \n            \n                \nrequestFactory(method, url, config)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startGuardCheck\n                        \n                        \n                    \n                \n            \n            \n                \nstartGuardCheck(target, methodName, request, context)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    methodName\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/client.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Client\n                        \n                        \n                    \n                \n            \n            \n                \nClient(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/error-handler.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            ErrorHandler\n                        \n                        \n                    \n                \n            \n            \n                \nErrorHandler()\n                \n            \n\n\n\n\n        \n    \n    projects/rest/src/lib/guards.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Guards\n                        \n                        \n                    \n                \n            \n            \n                \nGuards(guardFunctions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    guardFunctions\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/handlers.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Handlers\n                        \n                        \n                    \n                \n            \n            \n                \nHandlers(handlers)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handlers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/header.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Header\n                        \n                        \n                    \n                \n            \n            \n                \nHeader(name, replace)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replace\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParameterDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/rest/src/lib/headers.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Headers\n                        \n                        \n                    \n                \n            \n            \n                \nHeaders(headers)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PropertyDescriptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n@thalesrc/angular-rest\nAngular Rest Http Module with Typescript Declarative Annotations, Guards, Handlers and more\nThis package is under development. Use in caution!\n\n1. Installation\nyarn add @thalesrc/angular-restor\nnpm install @thalesrc/angular-rest --save\n2. Basic Example\n// app.module.ts\n\nimport { NgModule } from '@angular/core';\nimport { RestModule } from '@thalesrc/angular-rest';\n\nimport { TodoClient } from './todo.client';\nimport { TodoComponent } from './todo.component';\n\n@NgModule({\n  imports: [\n    RestModule.forRoot({baseUrl: 'http://localhost:3000'})\n  ],\n  providers: [\n    TodoClient\n  ],\n  declarations: [\n    TodoComponent\n  ]\n})\nexport class AppModule {}\n// todo.client.ts\n\nimport { HttpRequest } from '@angular/common/http';\nimport { Client, Get, Post, Body } from '@thalesrc/angular-rest';\n\n@Client()\nexport class TodoClient {\n\n  @Get()\n  public todos(): Promise {\n    return null;\n  }\n\n  @Post('todos')\n  public insertTodo(@Body() todo: Todo): Promise {\n    return null;\n  }\n}\n// todo.component.ts\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-todo',\n  template: 'Hello World'\n})\nexport class TodoComponent {\n  constructor(private client: TodoClient) {\n    this.client.todos().then(todos => {\n      // Make something with todos\n    });\n  }\n\n  async postTodo(todo: Todo): Promise {\n    return await this.client.insertTodo(todo);\n  }\n}\n\n3. API Docs\n3.1. Client Decorator\n@Client() decorator marks a class as RestClient and provides functionality to make Http calls with its marked methods.\nThis decorator also marks the class as Injectable() and makes it to function as an Angular Service.\nIt can be configured by defining a ClientOptions object as a parameter\n3.1.1. ClientOptions\nA ClientOptions object configures base options for the rest methods declared inside a @Client() class\ninterface ClientOptions {\n  baseUrl?: string;\n  guards?: Guard;\n  handlers?: HandlersOf;\n  baseHeaders?: HeadersClientParam;\n  providedIn?: Type | 'root';\n  onReady?: FunctionsOf;\n}@Client({\n  baseUrl: 'http://localhost:3000',\n  baseHeaders: [{'Secret-Key': 'The best rest util is @thalesrc/angular-rest'}]\n  ...\n})\nexport class TodoClient {\n  ...\n}3.2. Request Method Decorators\nAll of these decorators marks a method in a @Client() as a request builder. path can be specified to define the endpoint path. Otherwise, the method name is going to be used as path.\nThe method return type should be defined as Promise and function should be empty but only returning null. Decorators will handle all the rest.\n\n@Get(path?: string)\n@Post(path?: string)\n@Put(path?: string)\n@Delete(path?: string)\n@Patch(path?: string)\n@Options(path?: string)\n@Head(path?: string)\n@Jsonp(path?: string)\n\nExample:\n@Client()\nexport class TodoClient {\n  @Get()\n  public todos(): Promise {\n    return null;\n  }\n\n  @Post('todos')\n  public postTodo(@Body() todo: Todo): Promise {\n    return null;\n  }\n}3.3. Headers\nTo be determined\n3.3.1. Header Declaration Methods\nTo be determined\n3.3.1.1 HeaderInjector\nTo be determined\n3.3.1.2 HeadersObject\nTo be determined\n3.3.1.3 Headers as Client Method\nTo be determined\n3.3.2. Base Headers\nTo be determined\n3.3.3. Client Headers\nTo be determined\n3.3.4. Parameter Headers\nTo be determined\n3.4. Guards\nTo be determined\n3.4.1. Guard Declaration Methods\nTo be determined\n3.4.1.1 RestGuard\nTo be developed\n3.4.1.2. Guard Function\nTo be determined\n3.4.1.3. Guard Method\nTo be determined\n3.4.2. Base Guards\nTo be determined\n3.4.3. Client Guards\nTo be determined\n3.4.4. Method Guards\nTo be determined\n4.5. Handlers\nTo be determined\n4.5.1 ErrorHandlers\nTo be determined\n4.5.2 Handler Declaration Methods\nTo be determined\n4.5.2.1 Handler\nTo be determined\n4.5.2.2 Handler Function\nTo be determined\n4.5.2.3 Handler Method\nTo be determined\n4.5.3 Base Handlers\nTo be determined\n4.5.4 Client Handlers\nTo be determined\n4.5.5 Method Handlers\nTo be determined\n4.6. RestModule\nTo be determined\n4.7 On Ready Method\nTo be determined\n\n4. Aot Limitations\nThis package supports aot builds, however there are some limitations.\n\nThe Injector should have been defined as the first parameter for every @Client constructor.\n\nimport { Injector } from '@angular/core';\n\n@Client()\nexport class TodoClient {\n  constructor(injector: Injector, otherServices: Etc) {\n\n  }\n}\nBase handlers and base headers shouldn't be defined in RestModule.forRoot static method. All of these should be provided in module providers\n\nimport { NgModule } from '@angular/core';\nimport { RestModule, BASE_HEADERS, BASE_HANDLERS } from '@thalesrc/angular-rest';\n\nimport { BaseHeaders, BaseHandler } from './services';\n\n@NgModule({\n  imports: [RestModule],\n  providers: [\n    BaseHeaders,\n    BaseHandler,\n    {provide: BASE_HEADERS, useValue: [BaseHeaders, {'Secret-Key': 'topsecret'}], multi: true},\n    {provide: BASE_HANDLERS, useValue: [BaseHandler], multi: true},\n  ]\n})\nexport class AppModule {}\n5. Contributors\nAli Şahin Özçelik\nThis repository is started as a fork of steven166/angular-rest-client and completely refactored now\n\n6. License\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Thalesrc\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        RestModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FunctionsOf   (projects/.../types.ts)\n                        \n                        \n                            Guard   (projects/.../types.ts)\n                        \n                        \n                            GuardFunction   (projects/.../types.ts)\n                        \n                        \n                            GuardFunctionsOf   (projects/.../types.ts)\n                        \n                        \n                            HandlerFunction   (projects/.../types.ts)\n                        \n                        \n                            HandlerFunctionsOf   (projects/.../types.ts)\n                        \n                        \n                            HandlersOf   (projects/.../types.ts)\n                        \n                        \n                            HeaderInjectorResponse   (projects/.../types.ts)\n                        \n                        \n                            HeaderInjectorType   (projects/.../types.ts)\n                        \n                        \n                            HeadersClientParam   (projects/.../types.ts)\n                        \n                        \n                            HeadersParam   (projects/.../types.ts)\n                        \n                        \n                            RestPropertyDecorator   (projects/.../request-builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    FunctionsOf\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guard\n                \n            \n            \n                \n                        Array | GuardFunctionsOf | GuardFunction\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuardFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GuardFunctionsOf\n                \n            \n            \n                \n                        FunctionsOf\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandlerFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandlerFunctionsOf\n                \n            \n            \n                \n                            FunctionsOf\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandlersOf\n                \n            \n            \n                \n                            Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeaderInjectorResponse\n                \n            \n            \n                \n                            HeadersObject | Promise\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeaderInjectorType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeadersClientParam\n                \n            \n            \n                \n                            Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HeadersParam\n                \n            \n            \n                \n                            Array\n\n                \n            \n        \n    \n    projects/rest/src/lib/request-builder.ts\n    \n    \n        \n            \n                \n                    \n                    RestPropertyDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BASE_HEADERS   (projects/.../tokens.ts)\n                        \n                        \n                            BASE_URL   (projects/.../types.ts)\n                        \n                        \n                            BASE_URL   (projects/.../tokens.ts)\n                        \n                        \n                            BODIES   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_GUARDS   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_HANDLERS   (projects/.../types.ts)\n                        \n                        \n                            CLIENT_HEADERS   (projects/.../types.ts)\n                        \n                        \n                            Delete   (projects/.../request.decorator.ts)\n                        \n                        \n                            ERROR_HANDLER   (projects/.../types.ts)\n                        \n                        \n                            Get   (projects/.../request.decorator.ts)\n                        \n                        \n                            GUARDS   (projects/.../types.ts)\n                        \n                        \n                            HANDLERS   (projects/.../types.ts)\n                        \n                        \n                            Head   (projects/.../request.decorator.ts)\n                        \n                        \n                            HEADERS   (projects/.../types.ts)\n                        \n                        \n                            HTTP_CLIENT   (projects/.../types.ts)\n                        \n                        \n                            INJECTOR   (projects/.../types.ts)\n                        \n                        \n                            Jsonp   (projects/.../request.decorator.ts)\n                        \n                        \n                            Options   (projects/.../request.decorator.ts)\n                        \n                        \n                            PARAM_HEADERS   (projects/.../types.ts)\n                        \n                        \n                            Patch   (projects/.../request.decorator.ts)\n                        \n                        \n                            Post   (projects/.../request.decorator.ts)\n                        \n                        \n                            Put   (projects/.../request.decorator.ts)\n                        \n                        \n                            REST_HANDLERS   (projects/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/rest/src/lib/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('BASE_HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('REST_BASE_URL')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            REST_HANDLERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('REST_HANDLERS')\n                        \n                    \n\n\n            \n        \n\n    projects/rest/src/lib/types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('BASE_URL')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BODIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('BODIES')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_GUARDS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_GUARDS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_HANDLERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_HANDLERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CLIENT_HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('CLIENT_HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ERROR_HANDLER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('ERROR_HANDLER')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GUARDS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('GUARDS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HANDLERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('HANDLERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('HEADERS')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HTTP_CLIENT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('HTTP_CLIENT')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INJECTOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('INJECTOR')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PARAM_HEADERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol('PARAM_HEADERS')\n                        \n                    \n\n\n            \n        \n\n    projects/rest/src/lib/request.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Delete\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.DELETE)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Get\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.GET)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Head\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.HEAD)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Jsonp\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.JSONP)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Options\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.OPTIONS)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Patch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.PATCH)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Post\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.POST)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Put\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : requestBuilder(RequestMethod.PUT)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
